{"filter":false,"title":"connect-mysql.js","tooltip":"/lib/connect-mysql.js","undoManager":{"mark":100,"position":100,"stack":[[{"start":{"row":281,"column":4},"end":{"row":281,"column":6},"action":"insert","lines":["  "],"id":12}],[{"start":{"row":281,"column":6},"end":{"row":281,"column":8},"action":"insert","lines":["  "],"id":13}],[{"start":{"row":281,"column":8},"end":{"row":281,"column":10},"action":"insert","lines":["  "],"id":14}],[{"start":{"row":281,"column":10},"end":{"row":281,"column":12},"action":"insert","lines":["  "],"id":15}],[{"start":{"row":281,"column":12},"end":{"row":281,"column":14},"action":"insert","lines":["  "],"id":16}],[{"start":{"row":282,"column":49},"end":{"row":282,"column":56},"action":"remove","lines":["session"],"id":17},{"start":{"row":282,"column":49},"end":{"row":282,"column":66},"action":"insert","lines":["result[0].session"]}],[{"start":{"row":282,"column":75},"end":{"row":282,"column":76},"action":"remove","lines":[" "],"id":18},{"start":{"row":282,"column":75},"end":{"row":283,"column":0},"action":"insert","lines":["",""]},{"start":{"row":283,"column":0},"end":{"row":283,"column":16},"action":"insert","lines":["                "]}],[{"start":{"row":283,"column":16},"end":{"row":283,"column":18},"action":"insert","lines":["  "],"id":19}],[{"start":{"row":284,"column":15},"end":{"row":284,"column":16},"action":"insert","lines":[" "],"id":20}],[{"start":{"row":284,"column":16},"end":{"row":284,"column":17},"action":"insert","lines":["e"],"id":21}],[{"start":{"row":284,"column":17},"end":{"row":284,"column":18},"action":"insert","lines":["l"],"id":22}],[{"start":{"row":284,"column":18},"end":{"row":284,"column":19},"action":"insert","lines":["s"],"id":23}],[{"start":{"row":284,"column":19},"end":{"row":284,"column":20},"action":"insert","lines":["e"],"id":24}],[{"start":{"row":284,"column":20},"end":{"row":284,"column":21},"action":"insert","lines":[" "],"id":25}],[{"start":{"row":284,"column":21},"end":{"row":284,"column":22},"action":"insert","lines":["{"],"id":26}],[{"start":{"row":285,"column":0},"end":{"row":285,"column":2},"action":"insert","lines":["  "],"id":27}],[{"start":{"row":285,"column":2},"end":{"row":285,"column":4},"action":"insert","lines":["  "],"id":28}],[{"start":{"row":285,"column":4},"end":{"row":285,"column":6},"action":"insert","lines":["  "],"id":29}],[{"start":{"row":285,"column":6},"end":{"row":285,"column":8},"action":"insert","lines":["  "],"id":30}],[{"start":{"row":285,"column":8},"end":{"row":285,"column":10},"action":"insert","lines":["  "],"id":31}],[{"start":{"row":285,"column":10},"end":{"row":285,"column":12},"action":"insert","lines":["  "],"id":32}],[{"start":{"row":285,"column":12},"end":{"row":285,"column":14},"action":"insert","lines":["  "],"id":33}],[{"start":{"row":285,"column":14},"end":{"row":285,"column":16},"action":"insert","lines":["  "],"id":34}],[{"start":{"row":285,"column":16},"end":{"row":285,"column":17},"action":"insert","lines":["s"],"id":35}],[{"start":{"row":285,"column":17},"end":{"row":285,"column":18},"action":"insert","lines":["e"],"id":36}],[{"start":{"row":285,"column":18},"end":{"row":285,"column":19},"action":"insert","lines":["s"],"id":37}],[{"start":{"row":285,"column":19},"end":{"row":285,"column":20},"action":"insert","lines":["s"],"id":38}],[{"start":{"row":285,"column":20},"end":{"row":285,"column":21},"action":"insert","lines":["i"],"id":39}],[{"start":{"row":285,"column":21},"end":{"row":285,"column":22},"action":"insert","lines":["o"],"id":40}],[{"start":{"row":285,"column":22},"end":{"row":285,"column":23},"action":"insert","lines":["n"],"id":41}],[{"start":{"row":285,"column":23},"end":{"row":285,"column":24},"action":"insert","lines":[" "],"id":42}],[{"start":{"row":285,"column":56},"end":{"row":286,"column":0},"action":"insert","lines":["",""],"id":43},{"start":{"row":286,"column":0},"end":{"row":286,"column":16},"action":"insert","lines":["                "]}],[{"start":{"row":286,"column":14},"end":{"row":286,"column":16},"action":"remove","lines":["  "],"id":44}],[{"start":{"row":286,"column":14},"end":{"row":286,"column":15},"action":"insert","lines":["}"],"id":45}],[{"start":{"row":287,"column":0},"end":{"row":288,"column":0},"action":"remove","lines":["",""],"id":46}],[{"start":{"row":132,"column":52},"end":{"row":134,"column":42},"action":"remove","lines":[" '` WHERE id IN (' +","      'SELECT temp.id FROM (' +","        'SELECT `id` FROM `' + TableName +"],"id":47,"ignore":true},{"start":{"row":132,"column":52},"end":{"row":133,"column":5},"action":"insert","lines":["","     "]},{"start":{"row":133,"column":29},"end":{"row":133,"column":32},"action":"remove","lines":["AND"]},{"start":{"row":133,"column":29},"end":{"row":133,"column":32},"action":"insert","lines":["and"]},{"start":{"row":133,"column":62},"end":{"row":136,"column":0},"action":"remove","lines":[" +","      ') AS temp' +","    ');'",""]},{"start":{"row":133,"column":62},"end":{"row":133,"column":63},"action":"insert","lines":[";"]},{"start":{"row":275,"column":25},"end":{"row":275,"column":57},"action":"insert","lines":[" = JSON.parse(result[0].session)"]},{"start":{"row":278,"column":37},"end":{"row":281,"column":54},"action":"remove","lines":["decryptData(result[0].session, secret,","                  this.algo));","              } else {","                session = JSON.parse(result[0].session"]},{"start":{"row":278,"column":37},"end":{"row":278,"column":63},"action":"insert","lines":["session, secret, this.algo"]},{"start":{"row":280,"column":0},"end":{"row":280,"column":14},"action":"insert","lines":["              "]}],[{"start":{"row":132,"column":52},"end":{"row":133,"column":5},"action":"remove","lines":["","     "],"id":48,"ignore":true},{"start":{"row":132,"column":52},"end":{"row":134,"column":42},"action":"insert","lines":[" '` WHERE id IN (' +","      'SELECT temp.id FROM (' +","        'SELECT `id` FROM `' + TableName +"]},{"start":{"row":134,"column":66},"end":{"row":134,"column":69},"action":"remove","lines":["and"]},{"start":{"row":134,"column":66},"end":{"row":134,"column":69},"action":"insert","lines":["AND"]},{"start":{"row":134,"column":99},"end":{"row":134,"column":100},"action":"remove","lines":[";"]},{"start":{"row":134,"column":99},"end":{"row":137,"column":0},"action":"insert","lines":[" +","      ') AS temp' +","    ');'",""]},{"start":{"row":279,"column":25},"end":{"row":279,"column":57},"action":"remove","lines":[" = JSON.parse(result[0].session)"]},{"start":{"row":282,"column":37},"end":{"row":282,"column":63},"action":"remove","lines":["session, secret, this.algo"]},{"start":{"row":282,"column":37},"end":{"row":285,"column":54},"action":"insert","lines":["decryptData(result[0].session, secret,","                  this.algo));","              } else {","                session = JSON.parse(result[0].session"]},{"start":{"row":287,"column":0},"end":{"row":287,"column":14},"action":"remove","lines":["              "]}],[{"start":{"row":279,"column":0},"end":{"row":280,"column":0},"action":"insert","lines":["<<<<<<< HEAD",""],"id":49,"ignore":true},{"start":{"row":289,"column":0},"end":{"row":297,"column":0},"action":"insert","lines":["=======","              var session = JSON.parse(result[0].session);","              ","              if (secret) {","                session = JSON.parse(session, secret, this.algo);","              }","              ",">>>>>>> 670e76b162dab9a3b65d009fea52f86aab001c33",""]}],[{"start":{"row":288,"column":0},"end":{"row":297,"column":0},"action":"remove","lines":["","=======","              var session = JSON.parse(result[0].session);","              ","              if (secret) {","                session = JSON.parse(session, secret, this.algo);","              }","              ",">>>>>>> 670e76b162dab9a3b65d009fea52f86aab001c33",""],"id":50}],[{"start":{"row":288,"column":0},"end":{"row":289,"column":0},"action":"insert","lines":["",""],"id":51}],[{"start":{"row":279,"column":0},"end":{"row":280,"column":0},"action":"remove","lines":["<<<<<<< HEAD",""],"id":52}],[{"start":{"row":70,"column":0},"end":{"row":71,"column":0},"action":"insert","lines":["<<<<<<< HEAD",""],"id":53,"ignore":true},{"start":{"row":209,"column":0},"end":{"row":253,"column":0},"action":"insert","lines":["=======","    function encryptData(plaintext){","        var hmac = digest.call(this.secret, plaintext);","","        var obj = {","            hmac: hmac,","            pt: plaintext","        };","","        var ct = encrypt.call(this.secret, JSON.stringify(obj));","","        return ct;","    }","","    function decryptData(ciphertext){","        var pt = decrypt.call(this.secret, ciphertext);","        var obj = JSON.parse(pt);","        var hmac = digest.call(this.secret, JSON.stringify(obj.pt));","","        if (hmac != obj.hmac) {","            throw 'Encrypted session was tampered with!';","        }","","        return obj.pt;","    }","","    function digest(key, obj) {","        var hmac = this.crypto.createHmac('sha512', key);","        hmac.setEncoding('hex');","        hmac.write(obj);","        hmac.end();","        return hmac.read();","    }","","    function encrypt(key, pt, algo) {","        algo = algo || 'aes-256-ctr';","        pt = (Buffer.isBuffer(pt)) ? pt : new Buffer(pt);","","        var cipher = this.crypto.createCipher(algo, key), ct = [];","        ct.push(cipher.update(pt, 'buffer', 'hex'));","        ct.push(cipher.final('hex'));","","        return ct.join('');",">>>>>>> Crypto refactor to protect computed HMAC",""]},{"start":{"row":324,"column":18},"end":{"row":327,"column":16},"action":"remove","lines":["session;","              ","              if (secret) {","                "]},{"start":{"row":324,"column":39},"end":{"row":324,"column":51},"action":"remove","lines":["decryptData("]},{"start":{"row":324,"column":56},"end":{"row":325,"column":2},"action":"remove","lines":[", secret,","  "]},{"start":{"row":324,"column":56},"end":{"row":325,"column":0},"action":"insert","lines":[");",""]},{"start":{"row":325,"column":14},"end":{"row":325,"column":28},"action":"remove","lines":["  this.algo));"]},{"start":{"row":326,"column":14},"end":{"row":326,"column":20},"action":"remove","lines":["} else"]},{"start":{"row":326,"column":14},"end":{"row":326,"column":25},"action":"insert","lines":["if (secret)"]},{"start":{"row":327,"column":37},"end":{"row":327,"column":54},"action":"remove","lines":["result[0].session"]},{"start":{"row":327,"column":37},"end":{"row":327,"column":63},"action":"insert","lines":["session, secret, this.algo"]},{"start":{"row":329,"column":0},"end":{"row":329,"column":14},"action":"insert","lines":["              "]},{"start":{"row":341,"column":0},"end":{"row":342,"column":0},"action":"insert","lines":["<<<<<<< HEAD",""]},{"start":{"row":348,"column":66},"end":{"row":358,"column":48},"action":"insert","lines":["","=======","    function decrypt(key, ct, algo) {","        algo = algo || 'aes-256-ctr';","        var cipher = this.crypto.createDecipher(algo, key), pt = [];","","        pt.push(cipher.update(ct, 'hex', 'utf8'));","        pt.push(cipher.final('utf8'));","","        return pt.join('');",">>>>>>> Crypto refactor to protect computed HMAC"]}],[{"start":{"row":0,"column":0},"end":{"row":385,"column":0},"action":"remove","lines":["/*!"," * connect-mysql"," * Author: Nathan LaFreniere <nlf@andyet.net>"," */","","var util = require('util');","var crypto = require('crypto');","","function isFunction(obj) {","  return Object.prototype.toString.call(obj) == '[object Function]';","}","","function isNumber(obj) {","  return Object.prototype.toString.call(obj) == '[object Number]';","}","","function encryptData(plaintext, secret, algo) {","  var hmac = digest(secret, plaintext);","","  var obj = {","    hmac: hmac,","    pt: plaintext","  };","","  var ct = encrypt(secret, JSON.stringify(obj), algo);","","  return ct;","}","","function decryptData(ciphertext, secret) {","  var pt = decrypt(secret, ciphertext);","  var obj = JSON.parse(pt);","  var hmac = digest(secret, JSON.stringify(obj.pt));","","  if (hmac != obj.hmac) {","    throw 'Encrypted session was tampered with!';","  }","","  return obj.pt;","}","","function digest(key, obj) {","  var hmac = crypto.createHmac('sha512', key);","  hmac.setEncoding('hex');","  hmac.write(obj);","  hmac.end();","  return hmac.read();","}","","function encrypt(key, pt, algo) {","  algo = algo || 'aes-256-ctr';","  pt = (Buffer.isBuffer(pt)) ? pt : new Buffer(pt);","","  var cipher = crypto.createCipher(algo, key);","  var ct = [];","","  ct.push(cipher.update(pt, 'buffer', 'hex'));","  ct.push(cipher.final('hex'));","","  return ct.join('');","}","","function decrypt(key, ct, algo) {","  algo = algo || 'aes-256-ctr';","  var cipher = crypto.createDecipher(algo, key);","  var pt = [];","","  pt.push(cipher.update(ct, 'hex', 'utf8'));","  pt.push(cipher.final('utf8'));","","<<<<<<< HEAD","  return pt.join('');","}","","","module.exports = function(connect) {","  var Store = connect.Store || connect.session.Store,","      TableName = 'sessions';","","  function MySQLStore(options) {","    var cleanup = true,","        heartbeat = 30000;","","    Store.call(this, options);","","    if (options.hasOwnProperty('cleanup'))","      cleanup = options.cleanup;","","    if (options.hasOwnProperty('table'))","      TableName = options.table;","","    if (options.hasOwnProperty('retries'))","      this.numRetries = options.retries;","","    if (options.hasOwnProperty('secret')) {","      this.secret = options.secret;","","      if (options.hasOwnProperty('algorithm'))","        this.algorithm = options.algorithm || 'aes-256-ctr';","    }","","    if (options.hasOwnProperty('pool')) {","      var pool = options.pool;","      if (isFunction(pool.getConnection)) {","        this.usePool = true;","        this.pool = pool;","      } else if (pool === true) {","        this.usePool = true;","      }","    }","","    if (options.hasOwnProperty('keepalive')) {","      var keepalive = options.keepalive;","      if (isNumber(keepalive)) {","        heartbeat = keepalive;","      } else if (!keepalive) {","        heartbeat = -1;","      }","    }","","    this.config = options.config;","","    if (this.usePool && heartbeat > 0) {","      var keepAlive = function keepAlive() {","        this.query(function(connection, done) {","          connection.ping();","          done();","        }, function noop() {});","      }.bind(this);","","      setInterval(keepAlive, heartbeat);","    }","","    var cleanupQuery = 'DELETE FROM `' + TableName + '` WHERE id IN (' +","      'SELECT temp.id FROM (' +","        'SELECT `id` FROM `' + TableName + '` WHERE `expires` > 0 AND `expires` < UNIX_TIMESTAMP()' +","      ') AS temp' +","    ');'","","    var nodeCleanup = function() {","      this.query(function(connection, done) {","        connection.query(cleanupQuery, function(err) {","          done(err);","        });","      }, function noop() {});","    }.bind(this);","","    this.query(function(connection, done) {","      connection.query('CREATE TABLE IF NOT EXISTS `' + TableName +","        '` (`sid` VARCHAR(255) NOT NULL, `session` TEXT NOT NULL, `expires` INT, PRIMARY KEY (`sid`) ) CHARACTER SET utf8 COLLATE utf8_unicode_ci',","        function(err) {","          if (err) done(err);","          else if (cleanup) {","            connection.query('SET GLOBAL event_scheduler = 1', function(","              err) {","              if (err) {","                if (err.code !== 'ER_SPECIFIC_ACCESS_DENIED_ERROR')","                  done(err);","                else {","                  setInterval(nodeCleanup, 900000);","                  done();","                }","              } else {","                connection.query(","                  'CREATE EVENT IF NOT EXISTS `sess_cleanup` ON SCHEDULE EVERY 15 MINUTE DO ' +","                  cleanupQuery,","                  function(err) {","                    done(err);","                  });","              }","            });","          } else done();","        });","    }, function(err) {","      if (err) throw err;","    });","  }","","  util.inherits(MySQLStore, Store);","","  Object.defineProperty(MySQLStore.prototype, 'mysql', {","    get: function() {","      if (this.__mysql) return this.__mysql;","      else {","        var mysql = null;","        try {","          mysql = require('mysql');","          this.__mysql = mysql;","        } catch (err) {","          throw new Error('mysql module is not installed!');","        }","","        return mysql;","      }","    }","  });","","  Object.defineProperty(MySQLStore.prototype, 'pool', {","    get: function() {","      if (this.__pool) return this.__pool;","      else {","        var pool = this.mysql.createPool(this.config);","        this.__pool = pool;","","        return pool;","      }","    },","    set: function(val) {","      this.__pool = val;","=======","    function encryptData(plaintext){","        var hmac = digest.call(this.secret, plaintext);","","        var obj = {","            hmac: hmac,","            pt: plaintext","        };","","        var ct = encrypt.call(this.secret, JSON.stringify(obj));","","        return ct;","    }","","    function decryptData(ciphertext){","        var pt = decrypt.call(this.secret, ciphertext);","        var obj = JSON.parse(pt);","        var hmac = digest.call(this.secret, JSON.stringify(obj.pt));","","        if (hmac != obj.hmac) {","            throw 'Encrypted session was tampered with!';","        }","","        return obj.pt;","    }","","    function digest(key, obj) {","        var hmac = this.crypto.createHmac('sha512', key);","        hmac.setEncoding('hex');","        hmac.write(obj);","        hmac.end();","        return hmac.read();","    }","","    function encrypt(key, pt, algo) {","        algo = algo || 'aes-256-ctr';","        pt = (Buffer.isBuffer(pt)) ? pt : new Buffer(pt);","","        var cipher = this.crypto.createCipher(algo, key), ct = [];","        ct.push(cipher.update(pt, 'buffer', 'hex'));","        ct.push(cipher.final('hex'));","","        return ct.join('');",">>>>>>> Crypto refactor to protect computed HMAC","    }","  });","","  MySQLStore.prototype.query = function(query, callback) {","    var usePool = this.usePool,","      pool = this.pool,","      config = this.config,","      mysql = this.mysql,","      tries = 0,","      maxTries = (this.numRetries || 3) + 1,","      error = function(err) {","        if (err.code === 'PROTOCOL_CONNECTION_LOST') {","          retry();","        } else callback(err);","      },","      release = function(connection) {","        return function(err, value) {","          connection.removeListener('error', error);","          if (err) callback(err);","          else {","            if (usePool) connection.release();","            else connection.end();","            if (typeof callback === 'function') callback(null, value);","          }","        };","      },","      execute = function(connection) {","        connection.on('error', error);","        try {","          query(connection, release(connection));","        } catch (err) {","          retry();","        }","      },","      retry = function(prevErr) {","        if (tries < maxTries) {","          tries++;","          try {","            if (usePool) {","              pool.getConnection(function(err, connection) {","                if (err) callback(err);","                else execute(connection);","              });","            } else {","              var connection = mysql.createConnection(config);","              connection.connect(function(err) {","                if (err) callback(err);","                else execute(connection);","              });","            }","          } catch (err) {","            retry(err);","          }","        }","        //TODO: Use \"prevError\" to report an inner error (will require error lib?)","        else callback(new Error(\"Connection failed too many times in a row\"));","      };","","    retry();","  };","","  MySQLStore.prototype.get = function(sid, callback) {","    var secret = this.secret;","    self = this;","","    this.query(function(connection, done) {","      connection.query('SELECT `session` FROM `' + TableName +","        '` WHERE `sid` = ?', [sid],","        function(err, result) {","          if (result && result[0] && result[0].session) {","            try {","              var session = JSON.parse(result[0].session);","              ","              if (secret) {","                session = JSON.parse(session, secret, this.algo);","              }","              ","              done(null, session);","            } catch (cryptoErr) {","              done(cryptoErr);","            }","          } else {","            done(err);","          }","        });","    }, callback);","  };","","<<<<<<< HEAD","  MySQLStore.prototype.set = function(sid, session, callback) {","    var expires = new Date(session.cookie.expires).getTime() / 1000;","","    session = JSON.stringify(session);","","    if (this.secret) {","      session = encryptData(session, this.secret, this.algorithm);","=======","    function decrypt(key, ct, algo) {","        algo = algo || 'aes-256-ctr';","        var cipher = this.crypto.createDecipher(algo, key), pt = [];","","        pt.push(cipher.update(ct, 'hex', 'utf8'));","        pt.push(cipher.final('utf8'));","","        return pt.join('');",">>>>>>> Crypto refactor to protect computed HMAC","    }","","    this.query(function(connection, done) {","      connection.query('INSERT INTO `' + TableName +","        '` (`sid`, `session`, `expires`) VALUES(?, ?, ?) ON DUPLICATE KEY UPDATE `session` = ?, `expires` = ?', [","          sid, session, expires, session, expires","        ],","        function(err) {","          done(err);","        });","    }, callback);","  };","","  MySQLStore.prototype.destroy = function(sid, callback) {","    this.query(function(connection, done) {","      connection.query('DELETE FROM `' + TableName +","        '` WHERE `sid` = ?', [sid],","        function(err) {","          done(err);","        });","    }, callback);","  };","","","  return MySQLStore;","};",""],"id":54},{"start":{"row":0,"column":0},"end":{"row":328,"column":2},"action":"insert","lines":["/*!"," * connect-mysql"," * Author: Nathan LaFreniere <nlf@andyet.net>"," */","","var util = require('util');","var crypto = require('crypto');","","function isFunction(obj) {","  return Object.prototype.toString.call(obj) == '[object Function]';","}","","function isNumber(obj) {","  return Object.prototype.toString.call(obj) == '[object Number]';","}","","function encryptData(plaintext, secret, algo) {","  var hmac = digest(secret, plaintext);","","  var obj = {","    hmac: hmac,","    pt: plaintext","  };","","  var ct = encrypt(secret, JSON.stringify(obj), algo);","","  return ct;","}","","function decryptData(ciphertext, secret) {","  var pt = decrypt(secret, ciphertext);","  var obj = JSON.parse(pt);","  var hmac = digest(secret, JSON.stringify(obj.pt));","","  if (hmac != obj.hmac) {","    throw 'Encrypted session was tampered with!';","  }","","  return obj.pt;","}","","function digest(key, obj) {","  var hmac = crypto.createHmac('sha512', key);","  hmac.setEncoding('hex');","  hmac.write(obj);","  hmac.end();","  return hmac.read();","}","","function encrypt(key, pt, algo) {","  algo = algo || 'aes-256-ctr';","  pt = (Buffer.isBuffer(pt)) ? pt : new Buffer(pt);","","  var cipher = crypto.createCipher(algo, key);","  var ct = [];","","  ct.push(cipher.update(pt, 'buffer', 'hex'));","  ct.push(cipher.final('hex'));","","  return ct.join('');","}","","function decrypt(key, ct, algo) {","  algo = algo || 'aes-256-ctr';","  var cipher = crypto.createDecipher(algo, key);","  var pt = [];","","  pt.push(cipher.update(ct, 'hex', 'utf8'));","  pt.push(cipher.final('utf8'));","","  return pt.join('');","}","","","module.exports = function(connect) {","  var Store = connect.Store || connect.session.Store,","      TableName = 'sessions';","","  function MySQLStore(options) {","    var cleanup = true,","        heartbeat = 30000;","","    Store.call(this, options);","","    if (options.hasOwnProperty('cleanup'))","      cleanup = options.cleanup;","","    if (options.hasOwnProperty('table'))","      TableName = options.table;","","    if (options.hasOwnProperty('retries'))","      this.numRetries = options.retries;","","    if (options.hasOwnProperty('secret')) {","      this.secret = options.secret;","","      if (options.hasOwnProperty('algorithm'))","        this.algorithm = options.algorithm || 'aes-256-ctr';","    }","","    if (options.hasOwnProperty('pool')) {","      var pool = options.pool;","      if (isFunction(pool.getConnection)) {","        this.usePool = true;","        this.pool = pool;","      } else if (pool === true) {","        this.usePool = true;","      }","    }","","    if (options.hasOwnProperty('keepalive')) {","      var keepalive = options.keepalive;","      if (isNumber(keepalive)) {","        heartbeat = keepalive;","      } else if (!keepalive) {","        heartbeat = -1;","      }","    }","","    this.config = options.config;","","    if (this.usePool && heartbeat > 0) {","      var keepAlive = function keepAlive() {","        this.query(function(connection, done) {","          connection.ping();","          done();","        }, function noop() {});","      }.bind(this);","","      setInterval(keepAlive, heartbeat);","    }","","    var cleanupQuery = 'DELETE FROM `' + TableName + '` WHERE id IN (' +","      'SELECT temp.id FROM (' +","        'SELECT `id` FROM `' + TableName + '` WHERE `expires` > 0 AND `expires` < UNIX_TIMESTAMP()' +","      ') AS temp' +","    ');'","","    var nodeCleanup = function() {","      this.query(function(connection, done) {","        connection.query(cleanupQuery, function(err) {","          done(err);","        });","      }, function noop() {});","    }.bind(this);","","    this.query(function(connection, done) {","      connection.query('CREATE TABLE IF NOT EXISTS `' + TableName +","        '` (`sid` VARCHAR(255) NOT NULL, `session` TEXT NOT NULL, `expires` INT, PRIMARY KEY (`sid`) ) CHARACTER SET utf8 COLLATE utf8_unicode_ci',","        function(err) {","          if (err) done(err);","          else if (cleanup) {","            connection.query('SET GLOBAL event_scheduler = 1', function(","              err) {","              if (err) {","                if (err.code !== 'ER_SPECIFIC_ACCESS_DENIED_ERROR')","                  done(err);","                else {","                  setInterval(nodeCleanup, 900000);","                  done();","                }","              } else {","                connection.query(","                  'CREATE EVENT IF NOT EXISTS `sess_cleanup` ON SCHEDULE EVERY 15 MINUTE DO ' +","                  cleanupQuery,","                  function(err) {","                    done(err);","                  });","              }","            });","          } else done();","        });","    }, function(err) {","      if (err) throw err;","    });","  }","","  util.inherits(MySQLStore, Store);","","  Object.defineProperty(MySQLStore.prototype, 'mysql', {","    get: function() {","      if (this.__mysql) return this.__mysql;","      else {","        var mysql = null;","        try {","          mysql = require('mysql');","          this.__mysql = mysql;","        } catch (err) {","          throw new Error('mysql module is not installed!');","        }","","        return mysql;","      }","    }","  });","","  Object.defineProperty(MySQLStore.prototype, 'pool', {","    get: function() {","      if (this.__pool) return this.__pool;","      else {","        var pool = this.mysql.createPool(this.config);","        this.__pool = pool;","","        return pool;","      }","    },","    set: function(val) {","      this.__pool = val;","    }","  });","","  MySQLStore.prototype.query = function(query, callback) {","    var usePool = this.usePool,","      pool = this.pool,","      config = this.config,","      mysql = this.mysql,","      tries = 0,","      maxTries = (this.numRetries || 3) + 1,","      error = function(err) {","        if (err.code === 'PROTOCOL_CONNECTION_LOST') {","          retry();","        } else callback(err);","      },","      release = function(connection) {","        return function(err, value) {","          connection.removeListener('error', error);","          if (err) callback(err);","          else {","            if (usePool) connection.release();","            else connection.end();","            if (typeof callback === 'function') callback(null, value);","          }","        };","      },","      execute = function(connection) {","        connection.on('error', error);","        try {","          query(connection, release(connection));","        } catch (err) {","          retry();","        }","      },","      retry = function(prevErr) {","        if (tries < maxTries) {","          tries++;","          try {","            if (usePool) {","              pool.getConnection(function(err, connection) {","                if (err) callback(err);","                else execute(connection);","              });","            } else {","              var connection = mysql.createConnection(config);","              connection.connect(function(err) {","                if (err) callback(err);","                else execute(connection);","              });","            }","          } catch (err) {","            retry(err);","          }","        }","        //TODO: Use \"prevError\" to report an inner error (will require error lib?)","        else callback(new Error(\"Connection failed too many times in a row\"));","      };","","    retry();","  };","","  MySQLStore.prototype.get = function(sid, callback) {","    var secret = this.secret;","    self = this;","","    this.query(function(connection, done) {","      connection.query('SELECT `session` FROM `' + TableName +","        '` WHERE `sid` = ?', [sid],","        function(err, result) {","          if (result && result[0] && result[0].session) {","            try {","              var session = JSON.parse(result[0].session);","              ","              if (secret) {","                session = JSON.parse(session, secret, this.algo);","              }","              ","              done(null, session);","            } catch (cryptoErr) {","              done(cryptoErr);","            }","          } else {","            done(err);","          }","        });","    }, callback);","  };","","  MySQLStore.prototype.set = function(sid, session, callback) {","    var expires = new Date(session.cookie.expires).getTime() / 1000;","","    session = JSON.stringify(session);","","    if (this.secret) {","      session = encryptData(session, this.secret, this.algorithm);","    }","","    this.query(function(connection, done) {","      connection.query('INSERT INTO `' + TableName +","        '` (`sid`, `session`, `expires`) VALUES(?, ?, ?) ON DUPLICATE KEY UPDATE `session` = ?, `expires` = ?', [","          sid, session, expires, session, expires","        ],","        function(err) {","          done(err);","        });","    }, callback);","  };","","  MySQLStore.prototype.destroy = function(sid, callback) {","    this.query(function(connection, done) {","      connection.query('DELETE FROM `' + TableName +","        '` WHERE `sid` = ?', [sid],","        function(err) {","          done(err);","        });","    }, callback);","  };","","","  return MySQLStore;","};"]}],[{"start":{"row":279,"column":25},"end":{"row":279,"column":57},"action":"remove","lines":[" = JSON.parse(result[0].session)"],"id":55,"ignore":true},{"start":{"row":282,"column":37},"end":{"row":282,"column":63},"action":"remove","lines":["session, secret, this.algo"]},{"start":{"row":282,"column":37},"end":{"row":285,"column":54},"action":"insert","lines":["decryptData(result[0].session, secret,","                  this.algo));","              } else {","                session = JSON.parse(result[0].session"]},{"start":{"row":287,"column":0},"end":{"row":287,"column":14},"action":"remove","lines":["              "]},{"start":{"row":331,"column":2},"end":{"row":332,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":70,"column":0},"end":{"row":71,"column":0},"action":"insert","lines":["<<<<<<< HEAD",""],"id":56,"ignore":true},{"start":{"row":209,"column":0},"end":{"row":253,"column":0},"action":"insert","lines":["=======","    function encryptData(plaintext){","        var hmac = digest.call(this.secret, plaintext);","","        var obj = {","            hmac: hmac,","            pt: plaintext","        };","","        var ct = encrypt.call(this.secret, JSON.stringify(obj));","","        return ct;","    }","","    function decryptData(ciphertext){","        var pt = decrypt.call(this.secret, ciphertext);","        var obj = JSON.parse(pt);","        var hmac = digest.call(this.secret, JSON.stringify(obj.pt));","","        if (hmac != obj.hmac) {","            throw 'Encrypted session was tampered with!';","        }","","        return obj.pt;","    }","","    function digest(key, obj) {","        var hmac = this.crypto.createHmac('sha512', key);","        hmac.setEncoding('hex');","        hmac.write(obj);","        hmac.end();","        return hmac.read();","    }","","    function encrypt(key, pt, algo) {","        algo = algo || 'aes-256-ctr';","        pt = (Buffer.isBuffer(pt)) ? pt : new Buffer(pt);","","        var cipher = this.crypto.createCipher(algo, key), ct = [];","        ct.push(cipher.update(pt, 'buffer', 'hex'));","        ct.push(cipher.final('hex'));","","        return ct.join('');",">>>>>>> Crypto refactor to protect computed HMAC",""]},{"start":{"row":324,"column":18},"end":{"row":327,"column":16},"action":"remove","lines":["session;","              ","              if (secret) {","                "]},{"start":{"row":324,"column":39},"end":{"row":324,"column":51},"action":"remove","lines":["decryptData("]},{"start":{"row":324,"column":56},"end":{"row":325,"column":2},"action":"remove","lines":[", secret,","  "]},{"start":{"row":324,"column":56},"end":{"row":325,"column":0},"action":"insert","lines":[");",""]},{"start":{"row":325,"column":14},"end":{"row":325,"column":28},"action":"remove","lines":["  this.algo));"]},{"start":{"row":326,"column":14},"end":{"row":326,"column":20},"action":"remove","lines":["} else"]},{"start":{"row":326,"column":14},"end":{"row":326,"column":25},"action":"insert","lines":["if (secret)"]},{"start":{"row":327,"column":37},"end":{"row":327,"column":54},"action":"remove","lines":["result[0].session"]},{"start":{"row":327,"column":37},"end":{"row":327,"column":63},"action":"insert","lines":["session, secret, this.algo"]},{"start":{"row":329,"column":0},"end":{"row":329,"column":14},"action":"insert","lines":["              "]},{"start":{"row":341,"column":0},"end":{"row":342,"column":0},"action":"insert","lines":["<<<<<<< HEAD",""]},{"start":{"row":348,"column":66},"end":{"row":358,"column":48},"action":"insert","lines":["","=======","    function decrypt(key, ct, algo) {","        algo = algo || 'aes-256-ctr';","        var cipher = this.crypto.createDecipher(algo, key), pt = [];","","        pt.push(cipher.update(ct, 'hex', 'utf8'));","        pt.push(cipher.final('utf8'));","","        return pt.join('');",">>>>>>> Crypto refactor to protect computed HMAC"]}],[{"start":{"row":70,"column":0},"end":{"row":71,"column":0},"action":"remove","lines":["<<<<<<< HEAD",""],"id":57,"ignore":true},{"start":{"row":208,"column":0},"end":{"row":252,"column":0},"action":"remove","lines":["=======","    function encryptData(plaintext){","        var hmac = digest.call(this.secret, plaintext);","","        var obj = {","            hmac: hmac,","            pt: plaintext","        };","","        var ct = encrypt.call(this.secret, JSON.stringify(obj));","","        return ct;","    }","","    function decryptData(ciphertext){","        var pt = decrypt.call(this.secret, ciphertext);","        var obj = JSON.parse(pt);","        var hmac = digest.call(this.secret, JSON.stringify(obj.pt));","","        if (hmac != obj.hmac) {","            throw 'Encrypted session was tampered with!';","        }","","        return obj.pt;","    }","","    function digest(key, obj) {","        var hmac = this.crypto.createHmac('sha512', key);","        hmac.setEncoding('hex');","        hmac.write(obj);","        hmac.end();","        return hmac.read();","    }","","    function encrypt(key, pt, algo) {","        algo = algo || 'aes-256-ctr';","        pt = (Buffer.isBuffer(pt)) ? pt : new Buffer(pt);","","        var cipher = this.crypto.createCipher(algo, key), ct = [];","        ct.push(cipher.update(pt, 'buffer', 'hex'));","        ct.push(cipher.final('hex'));","","        return ct.join('');",">>>>>>> Crypto refactor to protect computed HMAC",""]},{"start":{"row":279,"column":18},"end":{"row":282,"column":16},"action":"insert","lines":["session;","              ","              if (secret) {","                "]},{"start":{"row":282,"column":37},"end":{"row":282,"column":49},"action":"insert","lines":["decryptData("]},{"start":{"row":282,"column":66},"end":{"row":283,"column":0},"action":"remove","lines":[");",""]},{"start":{"row":282,"column":66},"end":{"row":283,"column":2},"action":"insert","lines":[", secret,","  "]},{"start":{"row":283,"column":16},"end":{"row":283,"column":30},"action":"insert","lines":["  this.algo));"]},{"start":{"row":284,"column":14},"end":{"row":284,"column":25},"action":"remove","lines":["if (secret)"]},{"start":{"row":284,"column":14},"end":{"row":284,"column":20},"action":"insert","lines":["} else"]},{"start":{"row":285,"column":37},"end":{"row":285,"column":63},"action":"remove","lines":["session, secret, this.algo"]},{"start":{"row":285,"column":37},"end":{"row":285,"column":54},"action":"insert","lines":["result[0].session"]},{"start":{"row":287,"column":0},"end":{"row":287,"column":14},"action":"remove","lines":["              "]},{"start":{"row":299,"column":0},"end":{"row":300,"column":0},"action":"remove","lines":["<<<<<<< HEAD",""]},{"start":{"row":305,"column":66},"end":{"row":315,"column":48},"action":"remove","lines":["","=======","    function decrypt(key, ct, algo) {","        algo = algo || 'aes-256-ctr';","        var cipher = this.crypto.createDecipher(algo, key), pt = [];","","        pt.push(cipher.update(ct, 'hex', 'utf8'));","        pt.push(cipher.final('utf8'));","","        return pt.join('');",">>>>>>> Crypto refactor to protect computed HMAC"]}],[{"start":{"row":279,"column":25},"end":{"row":279,"column":57},"action":"insert","lines":[" = JSON.parse(result[0].session)"],"id":58,"ignore":true},{"start":{"row":282,"column":37},"end":{"row":285,"column":54},"action":"remove","lines":["decryptData(result[0].session, secret,","                  this.algo));","              } else {","                session = JSON.parse(result[0].session"]},{"start":{"row":282,"column":37},"end":{"row":282,"column":63},"action":"insert","lines":["session, secret, this.algo"]},{"start":{"row":284,"column":0},"end":{"row":284,"column":14},"action":"insert","lines":["              "]}],[{"start":{"row":70,"column":0},"end":{"row":71,"column":0},"action":"insert","lines":["<<<<<<< HEAD",""],"id":59,"ignore":true},{"start":{"row":209,"column":0},"end":{"row":253,"column":0},"action":"insert","lines":["=======","    function encryptData(plaintext){","        var hmac = digest.call(this.secret, plaintext);","","        var obj = {","            hmac: hmac,","            pt: plaintext","        };","","        var ct = encrypt.call(this.secret, JSON.stringify(obj));","","        return ct;","    }","","    function decryptData(ciphertext){","        var pt = decrypt.call(this.secret, ciphertext);","        var obj = JSON.parse(pt);","        var hmac = digest.call(this.secret, JSON.stringify(obj.pt));","","        if (hmac != obj.hmac) {","            throw 'Encrypted session was tampered with!';","        }","","        return obj.pt;","    }","","    function digest(key, obj) {","        var hmac = this.crypto.createHmac('sha512', key);","        hmac.setEncoding('hex');","        hmac.write(obj);","        hmac.end();","        return hmac.read();","    }","","    function encrypt(key, pt, algo) {","        algo = algo || 'aes-256-ctr';","        pt = (Buffer.isBuffer(pt)) ? pt : new Buffer(pt);","","        var cipher = this.crypto.createCipher(algo, key), ct = [];","        ct.push(cipher.update(pt, 'buffer', 'hex'));","        ct.push(cipher.final('hex'));","","        return ct.join('');",">>>>>>> Crypto refactor to protect computed HMAC",""]},{"start":{"row":341,"column":0},"end":{"row":342,"column":0},"action":"insert","lines":["<<<<<<< HEAD",""]},{"start":{"row":349,"column":0},"end":{"row":359,"column":0},"action":"insert","lines":["=======","    function decrypt(key, ct, algo) {","        algo = algo || 'aes-256-ctr';","        var cipher = this.crypto.createDecipher(algo, key), pt = [];","","        pt.push(cipher.update(ct, 'hex', 'utf8'));","        pt.push(cipher.final('utf8'));","","        return pt.join('');",">>>>>>> Crypto refactor to protect computed HMAC",""]}],[{"start":{"row":70,"column":0},"end":{"row":71,"column":0},"action":"remove","lines":["<<<<<<< HEAD",""],"id":60,"ignore":true},{"start":{"row":208,"column":0},"end":{"row":252,"column":0},"action":"remove","lines":["=======","    function encryptData(plaintext){","        var hmac = digest.call(this.secret, plaintext);","","        var obj = {","            hmac: hmac,","            pt: plaintext","        };","","        var ct = encrypt.call(this.secret, JSON.stringify(obj));","","        return ct;","    }","","    function decryptData(ciphertext){","        var pt = decrypt.call(this.secret, ciphertext);","        var obj = JSON.parse(pt);","        var hmac = digest.call(this.secret, JSON.stringify(obj.pt));","","        if (hmac != obj.hmac) {","            throw 'Encrypted session was tampered with!';","        }","","        return obj.pt;","    }","","    function digest(key, obj) {","        var hmac = this.crypto.createHmac('sha512', key);","        hmac.setEncoding('hex');","        hmac.write(obj);","        hmac.end();","        return hmac.read();","    }","","    function encrypt(key, pt, algo) {","        algo = algo || 'aes-256-ctr';","        pt = (Buffer.isBuffer(pt)) ? pt : new Buffer(pt);","","        var cipher = this.crypto.createCipher(algo, key), ct = [];","        ct.push(cipher.update(pt, 'buffer', 'hex'));","        ct.push(cipher.final('hex'));","","        return ct.join('');",">>>>>>> Crypto refactor to protect computed HMAC",""]},{"start":{"row":296,"column":0},"end":{"row":297,"column":0},"action":"remove","lines":["<<<<<<< HEAD",""]},{"start":{"row":303,"column":0},"end":{"row":313,"column":0},"action":"remove","lines":["=======","    function decrypt(key, ct, algo) {","        algo = algo || 'aes-256-ctr';","        var cipher = this.crypto.createDecipher(algo, key), pt = [];","","        pt.push(cipher.update(ct, 'hex', 'utf8'));","        pt.push(cipher.final('utf8'));","","        return pt.join('');",">>>>>>> Crypto refactor to protect computed HMAC",""]}],[{"start":{"row":279,"column":25},"end":{"row":279,"column":57},"action":"remove","lines":[" = JSON.parse(result[0].session)"],"id":61,"ignore":true},{"start":{"row":282,"column":37},"end":{"row":282,"column":63},"action":"remove","lines":["session, secret, this.algo"]},{"start":{"row":282,"column":37},"end":{"row":285,"column":54},"action":"insert","lines":["decryptData(result[0].session, secret,","                  this.algo));","              } else {","                session = JSON.parse(result[0].session"]},{"start":{"row":287,"column":0},"end":{"row":287,"column":14},"action":"remove","lines":["              "]}],[{"start":{"row":70,"column":0},"end":{"row":71,"column":0},"action":"insert","lines":["<<<<<<< HEAD",""],"id":62,"ignore":true},{"start":{"row":209,"column":0},"end":{"row":253,"column":0},"action":"insert","lines":["=======","    function encryptData(plaintext){","        var hmac = digest.call(this.secret, plaintext);","","        var obj = {","            hmac: hmac,","            pt: plaintext","        };","","        var ct = encrypt.call(this.secret, JSON.stringify(obj));","","        return ct;","    }","","    function decryptData(ciphertext){","        var pt = decrypt.call(this.secret, ciphertext);","        var obj = JSON.parse(pt);","        var hmac = digest.call(this.secret, JSON.stringify(obj.pt));","","        if (hmac != obj.hmac) {","            throw 'Encrypted session was tampered with!';","        }","","        return obj.pt;","    }","","    function digest(key, obj) {","        var hmac = this.crypto.createHmac('sha512', key);","        hmac.setEncoding('hex');","        hmac.write(obj);","        hmac.end();","        return hmac.read();","    }","","    function encrypt(key, pt, algo) {","        algo = algo || 'aes-256-ctr';","        pt = (Buffer.isBuffer(pt)) ? pt : new Buffer(pt);","","        var cipher = this.crypto.createCipher(algo, key), ct = [];","        ct.push(cipher.update(pt, 'buffer', 'hex'));","        ct.push(cipher.final('hex'));","","        return ct.join('');",">>>>>>> Crypto refactor to protect computed HMAC",""]},{"start":{"row":324,"column":18},"end":{"row":327,"column":16},"action":"remove","lines":["session;","              ","              if (secret) {","                "]},{"start":{"row":324,"column":39},"end":{"row":324,"column":51},"action":"remove","lines":["decryptData("]},{"start":{"row":324,"column":56},"end":{"row":325,"column":2},"action":"remove","lines":[", secret,","  "]},{"start":{"row":324,"column":56},"end":{"row":325,"column":0},"action":"insert","lines":[");",""]},{"start":{"row":325,"column":14},"end":{"row":325,"column":28},"action":"remove","lines":["  this.algo));"]},{"start":{"row":326,"column":14},"end":{"row":326,"column":20},"action":"remove","lines":["} else"]},{"start":{"row":326,"column":14},"end":{"row":326,"column":25},"action":"insert","lines":["if (secret)"]},{"start":{"row":327,"column":37},"end":{"row":327,"column":54},"action":"remove","lines":["result[0].session"]},{"start":{"row":327,"column":37},"end":{"row":327,"column":63},"action":"insert","lines":["session, secret, this.algo"]},{"start":{"row":329,"column":0},"end":{"row":329,"column":14},"action":"insert","lines":["              "]},{"start":{"row":341,"column":0},"end":{"row":342,"column":0},"action":"insert","lines":["<<<<<<< HEAD",""]},{"start":{"row":348,"column":66},"end":{"row":358,"column":48},"action":"insert","lines":["","=======","    function decrypt(key, ct, algo) {","        algo = algo || 'aes-256-ctr';","        var cipher = this.crypto.createDecipher(algo, key), pt = [];","","        pt.push(cipher.update(ct, 'hex', 'utf8'));","        pt.push(cipher.final('utf8'));","","        return pt.join('');",">>>>>>> Crypto refactor to protect computed HMAC"]}],[{"start":{"row":341,"column":0},"end":{"row":342,"column":0},"action":"remove","lines":["<<<<<<< HEAD",""],"id":63}],[{"start":{"row":348,"column":0},"end":{"row":358,"column":0},"action":"remove","lines":["=======","    function decrypt(key, ct, algo) {","        algo = algo || 'aes-256-ctr';","        var cipher = this.crypto.createDecipher(algo, key), pt = [];","","        pt.push(cipher.update(ct, 'hex', 'utf8'));","        pt.push(cipher.final('utf8'));","","        return pt.join('');",">>>>>>> Crypto refactor to protect computed HMAC",""],"id":64}],[{"start":{"row":324,"column":25},"end":{"row":324,"column":26},"action":"insert","lines":[";"],"id":65}],[{"start":{"row":324,"column":26},"end":{"row":324,"column":27},"action":"remove","lines":[" "],"id":66},{"start":{"row":324,"column":26},"end":{"row":325,"column":0},"action":"insert","lines":["",""]},{"start":{"row":325,"column":0},"end":{"row":325,"column":14},"action":"insert","lines":["              "]}],[{"start":{"row":325,"column":14},"end":{"row":326,"column":0},"action":"insert","lines":["",""],"id":67},{"start":{"row":326,"column":0},"end":{"row":326,"column":14},"action":"insert","lines":["              "]}],[{"start":{"row":326,"column":0},"end":{"row":327,"column":0},"action":"remove","lines":["              = JSON.parse(result[0].session);",""],"id":68}],[{"start":{"row":329,"column":15},"end":{"row":329,"column":16},"action":"insert","lines":[" "],"id":69}],[{"start":{"row":329,"column":16},"end":{"row":329,"column":17},"action":"insert","lines":["e"],"id":70}],[{"start":{"row":329,"column":17},"end":{"row":329,"column":18},"action":"insert","lines":["l"],"id":71}],[{"start":{"row":329,"column":18},"end":{"row":329,"column":19},"action":"insert","lines":["s"],"id":72}],[{"start":{"row":329,"column":19},"end":{"row":329,"column":20},"action":"insert","lines":["e"],"id":73}],[{"start":{"row":329,"column":20},"end":{"row":329,"column":21},"action":"insert","lines":[" "],"id":74}],[{"start":{"row":329,"column":21},"end":{"row":329,"column":22},"action":"insert","lines":["{"],"id":75}],[{"start":{"row":329,"column":22},"end":{"row":331,"column":15},"action":"insert","lines":["","                ","              }"],"id":76}],[{"start":{"row":330,"column":16},"end":{"row":331,"column":0},"action":"insert","lines":["              = JSON.parse(result[0].session);",""],"id":77}],[{"start":{"row":330,"column":0},"end":{"row":330,"column":30},"action":"remove","lines":["                              "],"id":78}],[{"start":{"row":330,"column":0},"end":{"row":330,"column":2},"action":"insert","lines":["  "],"id":79}],[{"start":{"row":330,"column":2},"end":{"row":330,"column":4},"action":"insert","lines":["  "],"id":80}],[{"start":{"row":330,"column":4},"end":{"row":330,"column":6},"action":"insert","lines":["  "],"id":81}],[{"start":{"row":330,"column":6},"end":{"row":330,"column":8},"action":"insert","lines":["  "],"id":82}],[{"start":{"row":330,"column":8},"end":{"row":330,"column":10},"action":"insert","lines":["  "],"id":83}],[{"start":{"row":330,"column":10},"end":{"row":330,"column":12},"action":"insert","lines":["  "],"id":84}],[{"start":{"row":330,"column":12},"end":{"row":330,"column":14},"action":"insert","lines":["  "],"id":85}],[{"start":{"row":330,"column":14},"end":{"row":330,"column":16},"action":"insert","lines":["  "],"id":86}],[{"start":{"row":330,"column":16},"end":{"row":330,"column":17},"action":"insert","lines":["s"],"id":87}],[{"start":{"row":330,"column":17},"end":{"row":330,"column":18},"action":"insert","lines":["e"],"id":88}],[{"start":{"row":330,"column":18},"end":{"row":330,"column":19},"action":"insert","lines":["s"],"id":89}],[{"start":{"row":330,"column":19},"end":{"row":330,"column":20},"action":"insert","lines":["s"],"id":90}],[{"start":{"row":330,"column":20},"end":{"row":330,"column":21},"action":"insert","lines":["i"],"id":91}],[{"start":{"row":330,"column":21},"end":{"row":330,"column":22},"action":"insert","lines":["o"],"id":92}],[{"start":{"row":330,"column":22},"end":{"row":330,"column":23},"action":"insert","lines":["n"],"id":93}],[{"start":{"row":330,"column":23},"end":{"row":330,"column":24},"action":"insert","lines":[" "],"id":94}],[{"start":{"row":328,"column":37},"end":{"row":328,"column":44},"action":"remove","lines":["session"],"id":95},{"start":{"row":328,"column":37},"end":{"row":328,"column":54},"action":"insert","lines":["result[0].session"]}],[{"start":{"row":326,"column":0},"end":{"row":327,"column":0},"action":"remove","lines":["              ",""],"id":96},{"start":{"row":326,"column":0},"end":{"row":326,"column":2},"action":"remove","lines":["  "]}],[{"start":{"row":326,"column":0},"end":{"row":326,"column":2},"action":"insert","lines":["  "],"id":97}],[{"start":{"row":330,"column":0},"end":{"row":331,"column":2},"action":"remove","lines":["","  "],"id":98}],[{"start":{"row":330,"column":0},"end":{"row":330,"column":2},"action":"insert","lines":["  "],"id":99}],[{"start":{"row":68,"column":32},"end":{"row":69,"column":12},"action":"insert","lines":["","<<<<<<< HEAD"],"id":100,"ignore":true},{"start":{"row":213,"column":0},"end":{"row":253,"column":48},"action":"remove","lines":["","        var obj = {","            hmac: hmac,","            pt: plaintext","        };","","        var ct = encrypt.call(this.secret, JSON.stringify(obj));","","        return ct;","    }","","    function decryptData(ciphertext){","        var pt = decrypt.call(this.secret, ciphertext);","        var obj = JSON.parse(pt);","        var hmac = digest.call(this.secret, JSON.stringify(obj.pt));","","        if (hmac != obj.hmac) {","            throw 'Encrypted session was tampered with!';","        }","","        return obj.pt;","    }","","    function digest(key, obj) {","        var hmac = this.crypto.createHmac('sha512', key);","        hmac.setEncoding('hex');","        hmac.write(obj);","        hmac.end();","        return hmac.read();","    }","","    function encrypt(key, pt, algo) {","        algo = algo || 'aes-256-ctr';","        pt = (Buffer.isBuffer(pt)) ? pt : new Buffer(pt);","","        var cipher = this.crypto.createCipher(algo, key), ct = [];","        ct.push(cipher.update(pt, 'buffer', 'hex'));","        ct.push(cipher.final('hex'));","","        return ct.join('');",">>>>>>> Crypto refactor to protect computed HMAC"]},{"start":{"row":213,"column":0},"end":{"row":354,"column":28},"action":"insert","lines":["=======","","  return pt.join('');","}",">>>>>>> Version bump; v2.1.3","","","module.exports = function(connect) {","  var Store = connect.Store || connect.session.Store,","      TableName = 'sessions';","","  function MySQLStore(options) {","    var cleanup = true,","        heartbeat = 30000;","","    Store.call(this, options);","","    if (options.hasOwnProperty('cleanup'))","      cleanup = options.cleanup;","","    if (options.hasOwnProperty('table'))","      TableName = options.table;","","    if (options.hasOwnProperty('retries'))","      this.numRetries = options.retries;","","    if (options.hasOwnProperty('secret')) {","      this.secret = options.secret;","","      if (options.hasOwnProperty('algorithm'))","        this.algorithm = options.algorithm || 'aes-256-ctr';","    }","","    if (options.hasOwnProperty('pool')) {","      var pool = options.pool;","      if (isFunction(pool.getConnection)) {","        this.usePool = true;","        this.pool = pool;","      } else if (pool === true) {","        this.usePool = true;","      }","    }","","    if (options.hasOwnProperty('keepalive')) {","      var keepalive = options.keepalive;","      if (isNumber(keepalive)) {","        heartbeat = keepalive;","      } else if (!keepalive) {","        heartbeat = -1;","      }","    }","","    this.config = options.config;","","    if (this.usePool && heartbeat > 0) {","      var keepAlive = function keepAlive() {","        this.query(function(connection, done) {","          connection.ping();","          done();","        }, function noop() {});","      }.bind(this);","","      setInterval(keepAlive, heartbeat);","    }","","    var cleanupQuery = 'DELETE FROM `' + TableName +","      '` WHERE `expires` > 0 and `expires` < UNIX_TIMESTAMP()';","    var nodeCleanup = function() {","      this.query(function(connection, done) {","        connection.query(cleanupQuery, function(err) {","          done(err);","        });","      }, function noop() {});","    }.bind(this);","","    this.query(function(connection, done) {","      connection.query('CREATE TABLE IF NOT EXISTS `' + TableName +","        '` (`sid` VARCHAR(255) NOT NULL, `session` TEXT NOT NULL, `expires` INT, PRIMARY KEY (`sid`) ) CHARACTER SET utf8 COLLATE utf8_unicode_ci',","        function(err) {","          if (err) done(err);","          else if (cleanup) {","            connection.query('SET GLOBAL event_scheduler = 1', function(","              err) {","              if (err) {","                if (err.code !== 'ER_SPECIFIC_ACCESS_DENIED_ERROR')","                  done(err);","                else {","                  setInterval(nodeCleanup, 900000);","                  done();","                }","              } else {","                connection.query(","                  'CREATE EVENT IF NOT EXISTS `sess_cleanup` ON SCHEDULE EVERY 15 MINUTE DO ' +","                  cleanupQuery,","                  function(err) {","                    done(err);","                  });","              }","            });","          } else done();","        });","    }, function(err) {","      if (err) throw err;","    });","  }","","  util.inherits(MySQLStore, Store);","","  Object.defineProperty(MySQLStore.prototype, 'mysql', {","    get: function() {","      if (this.__mysql) return this.__mysql;","      else {","        var mysql = null;","        try {","          mysql = require('mysql');","          this.__mysql = mysql;","        } catch (err) {","          throw new Error('mysql module is not installed!');","        }","","<<<<<<< HEAD","        return ct.join('');",">>>>>>> Crypto refactor to protect computed HMAC","=======","        return mysql;","      }","    }","  });","","  Object.defineProperty(MySQLStore.prototype, 'pool', {","    get: function() {","      if (this.__pool) return this.__pool;","      else {","        var pool = this.mysql.createPool(this.config);","        this.__pool = pool;","","        return pool;","      }","    },","    set: function(val) {","      this.__pool = val;",">>>>>>> Version bump; v2.1.3"]},{"start":{"row":426,"column":0},"end":{"row":427,"column":0},"action":"insert","lines":["<<<<<<< HEAD",""]},{"start":{"row":432,"column":56},"end":{"row":438,"column":28},"action":"insert","lines":["","=======","              var session = JSON.parse(result[0].session);","              ","              if (secret) {","                session = JSON.parse(session, secret, this.algo);",">>>>>>> Version bump; v2.1.3"]}],[{"start":{"row":333,"column":0},"end":{"row":337,"column":0},"action":"remove","lines":["<<<<<<< HEAD","        return ct.join('');",">>>>>>> Crypto refactor to protect computed HMAC","=======",""],"id":101}],[{"start":{"row":350,"column":0},"end":{"row":351,"column":0},"action":"remove","lines":[">>>>>>> Version bump; v2.1.3",""],"id":102}],[{"start":{"row":65,"column":14},"end":{"row":66,"column":12},"action":"insert","lines":["","<<<<<<< HEAD"],"id":103,"ignore":true},{"start":{"row":243,"column":0},"end":{"row":275,"column":0},"action":"insert","lines":["=======","","  pt.push(cipher.update(ct, 'hex', 'utf8'));","  pt.push(cipher.final('utf8'));","","  return pt.join('');","}","","","module.exports = function(connect) {","  var Store = connect.Store || connect.session.Store,","      TableName = 'sessions';","","  function MySQLStore(options) {","    var cleanup = true,","        heartbeat = 30000;","","    Store.call(this, options);","","    if (options.hasOwnProperty('cleanup'))","      cleanup = options.cleanup;","","    if (options.hasOwnProperty('table'))","      TableName = options.table;","","    if (options.hasOwnProperty('retries'))","      this.numRetries = options.retries;","","    if (options.hasOwnProperty('secret')) {","      this.secret = options.secret;","",">>>>>>> Dependency update & version bump",""]},{"start":{"row":296,"column":5},"end":{"row":310,"column":7},"action":"insert","lines":["","<<<<<<< HEAD","","    this.config = options.config;","","    if (this.usePool && heartbeat > 0) {","      var keepAlive = function keepAlive() {","        this.query(function(connection, done) {","          connection.ping();","          done();","        }, function noop() {});","      }.bind(this);","","      setInterval(keepAlive, heartbeat);","======="]},{"start":{"row":392,"column":0},"end":{"row":554,"column":0},"action":"insert","lines":["        return pool;","      }","    },","    set: function(val) {","      this.__pool = val;",">>>>>>> Dependency update & version bump","    }","  });","","  MySQLStore.prototype.query = function(query, callback) {","    var usePool = this.usePool,","      pool = this.pool,","      config = this.config,","      mysql = this.mysql,","      tries = 0,","      maxTries = (this.numRetries || 3) + 1,","      error = function(err) {","        if (err.code === 'PROTOCOL_CONNECTION_LOST') {","          retry();","        } else callback(err);","      },","      release = function(connection) {","        return function(err, value) {","          connection.removeListener('error', error);","          if (err) callback(err);","          else {","            if (usePool) connection.release();","            else connection.end();","            if (typeof callback === 'function') callback(null, value);","          }","        };","      },","      execute = function(connection) {","        connection.on('error', error);","        try {","          query(connection, release(connection));","        } catch (err) {","          retry();","        }","      },","      retry = function(prevErr) {","        if (tries < maxTries) {","          tries++;","          try {","            if (usePool) {","              pool.getConnection(function(err, connection) {","                if (err) callback(err);","                else execute(connection);","              });","            } else {","              var connection = mysql.createConnection(config);","              connection.connect(function(err) {","                if (err) callback(err);","                else execute(connection);","              });","            }","          } catch (err) {","            retry(err);","          }","        }","        //TODO: Use \"prevError\" to report an inner error (will require error lib?)","        else callback(new Error(\"Connection failed too many times in a row\"));","      };","","    retry();","  };","","  MySQLStore.prototype.get = function(sid, callback) {","    var secret = this.secret;","    self = this;","","    this.query(function(connection, done) {","      connection.query('SELECT `session` FROM `' + TableName +","        '` WHERE `sid` = ?', [sid],","        function(err, result) {","          if (result && result[0] && result[0].session) {","            try {","              var session = JSON.parse(result[0].session);","              ","              if (secret) {","                session = JSON.parse(session, secret, this.algo);","              }","              ","              done(null, session);","            } catch (cryptoErr) {","              done(cryptoErr);","            }","          } else {","            done(err);","          }","        });","    }, callback);","  };","","<<<<<<< HEAD","    var cleanupQuery = 'DELETE FROM `' + TableName +","      '` WHERE `expires` > 0 and `expires` < UNIX_TIMESTAMP()';","    var nodeCleanup = function() {","      this.query(function(connection, done) {","        connection.query(cleanupQuery, function(err) {","          done(err);","        });","      }, function noop() {});","    }.bind(this);","","    this.query(function(connection, done) {","      connection.query('CREATE TABLE IF NOT EXISTS `' + TableName +","        '` (`sid` VARCHAR(255) NOT NULL, `session` TEXT NOT NULL, `expires` INT, PRIMARY KEY (`sid`) ) CHARACTER SET utf8 COLLATE utf8_unicode_ci',","        function(err) {","          if (err) done(err);","          else if (cleanup) {","            connection.query('SET GLOBAL event_scheduler = 1', function(","              err) {","              if (err) {","                if (err.code !== 'ER_SPECIFIC_ACCESS_DENIED_ERROR')","                  done(err);","                else {","                  setInterval(nodeCleanup, 900000);","                  done();","                }","              } else {","                connection.query(","                  'CREATE EVENT IF NOT EXISTS `sess_cleanup` ON SCHEDULE EVERY 15 MINUTE DO ' +","                  cleanupQuery,","                  function(err) {","                    done(err);","                  });","              }","            });","          } else done();","        });","    }, function(err) {","      if (err) throw err;","    });","  }","","  util.inherits(MySQLStore, Store);","","  Object.defineProperty(MySQLStore.prototype, 'mysql', {","    get: function() {","      if (this.__mysql) return this.__mysql;","      else {","        var mysql = null;","        try {","          mysql = require('mysql');","          this.__mysql = mysql;","        } catch (err) {","          throw new Error('mysql module is not installed!');","        }","","        return mysql;","      }","    }","  });","","  Object.defineProperty(MySQLStore.prototype, 'pool', {","    get: function() {","      if (this.__pool) return this.__pool;","      else {","        var pool = this.mysql.createPool(this.config);","        this.__pool = pool;","",""]},{"start":{"row":656,"column":0},"end":{"row":658,"column":0},"action":"insert","lines":["=======",">>>>>>> Dependency update & version bump",""]}],[{"start":{"row":397,"column":0},"end":{"row":398,"column":0},"action":"remove","lines":[">>>>>>> Dependency update & version bump",""],"id":104}],[{"start":{"row":0,"column":0},"end":{"row":690,"column":0},"action":"remove","lines":["/*!"," * connect-mysql"," * Author: Nathan LaFreniere <nlf@andyet.net>"," */","","var util = require('util');","var crypto = require('crypto');","","function isFunction(obj) {","  return Object.prototype.toString.call(obj) == '[object Function]';","}","","function isNumber(obj) {","  return Object.prototype.toString.call(obj) == '[object Number]';","}","","function encryptData(plaintext, secret, algo) {","  var hmac = digest(secret, plaintext);","","  var obj = {","    hmac: hmac,","    pt: plaintext","  };","","  var ct = encrypt(secret, JSON.stringify(obj), algo);","","  return ct;","}","","function decryptData(ciphertext, secret) {","  var pt = decrypt(secret, ciphertext);","  var obj = JSON.parse(pt);","  var hmac = digest(secret, JSON.stringify(obj.pt));","","  if (hmac != obj.hmac) {","    throw 'Encrypted session was tampered with!';","  }","","  return obj.pt;","}","","function digest(key, obj) {","  var hmac = crypto.createHmac('sha512', key);","  hmac.setEncoding('hex');","  hmac.write(obj);","  hmac.end();","  return hmac.read();","}","","function encrypt(key, pt, algo) {","  algo = algo || 'aes-256-ctr';","  pt = (Buffer.isBuffer(pt)) ? pt : new Buffer(pt);","","  var cipher = crypto.createCipher(algo, key);","  var ct = [];","","  ct.push(cipher.update(pt, 'buffer', 'hex'));","  ct.push(cipher.final('hex'));","","  return ct.join('');","}","","function decrypt(key, ct, algo) {","  algo = algo || 'aes-256-ctr';","  var cipher = crypto.createDecipher(algo, key);","  var pt = [];","<<<<<<< HEAD","","  pt.push(cipher.update(ct, 'hex', 'utf8'));","  pt.push(cipher.final('utf8'));","<<<<<<< HEAD","","<<<<<<< HEAD","  return pt.join('');","}","","","module.exports = function(connect) {","  var Store = connect.Store || connect.session.Store,","      TableName = 'sessions';","","  function MySQLStore(options) {","    var cleanup = true,","        heartbeat = 30000;","","    Store.call(this, options);","","    if (options.hasOwnProperty('cleanup'))","      cleanup = options.cleanup;","","    if (options.hasOwnProperty('table'))","      TableName = options.table;","","    if (options.hasOwnProperty('retries'))","      this.numRetries = options.retries;","","    if (options.hasOwnProperty('secret')) {","      this.secret = options.secret;","","      if (options.hasOwnProperty('algorithm'))","        this.algorithm = options.algorithm || 'aes-256-ctr';","    }","","    if (options.hasOwnProperty('pool')) {","      var pool = options.pool;","      if (isFunction(pool.getConnection)) {","        this.usePool = true;","        this.pool = pool;","      } else if (pool === true) {","        this.usePool = true;","      }","    }","","    if (options.hasOwnProperty('keepalive')) {","      var keepalive = options.keepalive;","      if (isNumber(keepalive)) {","        heartbeat = keepalive;","      } else if (!keepalive) {","        heartbeat = -1;","      }","    }","","    this.config = options.config;","","    if (this.usePool && heartbeat > 0) {","      var keepAlive = function keepAlive() {","        this.query(function(connection, done) {","          connection.ping();","          done();","        }, function noop() {});","      }.bind(this);","","      setInterval(keepAlive, heartbeat);","    }","","    var cleanupQuery = 'DELETE FROM `' + TableName + '` WHERE id IN (' +","      'SELECT temp.id FROM (' +","        'SELECT `id` FROM `' + TableName + '` WHERE `expires` > 0 AND `expires` < UNIX_TIMESTAMP()' +","      ') AS temp' +","    ');'","","    var nodeCleanup = function() {","      this.query(function(connection, done) {","        connection.query(cleanupQuery, function(err) {","          done(err);","        });","      }, function noop() {});","    }.bind(this);","","    this.query(function(connection, done) {","      connection.query('CREATE TABLE IF NOT EXISTS `' + TableName +","        '` (`sid` VARCHAR(255) NOT NULL, `session` TEXT NOT NULL, `expires` INT, PRIMARY KEY (`sid`) ) CHARACTER SET utf8 COLLATE utf8_unicode_ci',","        function(err) {","          if (err) done(err);","          else if (cleanup) {","            connection.query('SET GLOBAL event_scheduler = 1', function(","              err) {","              if (err) {","                if (err.code !== 'ER_SPECIFIC_ACCESS_DENIED_ERROR')","                  done(err);","                else {","                  setInterval(nodeCleanup, 900000);","                  done();","                }","              } else {","                connection.query(","                  'CREATE EVENT IF NOT EXISTS `sess_cleanup` ON SCHEDULE EVERY 15 MINUTE DO ' +","                  cleanupQuery,","                  function(err) {","                    done(err);","                  });","              }","            });","          } else done();","        });","    }, function(err) {","      if (err) throw err;","    });","  }","","  util.inherits(MySQLStore, Store);","","  Object.defineProperty(MySQLStore.prototype, 'mysql', {","    get: function() {","      if (this.__mysql) return this.__mysql;","      else {","        var mysql = null;","        try {","          mysql = require('mysql');","          this.__mysql = mysql;","        } catch (err) {","          throw new Error('mysql module is not installed!');","        }","","        return mysql;","      }","    }","  });","","  Object.defineProperty(MySQLStore.prototype, 'pool', {","    get: function() {","      if (this.__pool) return this.__pool;","      else {","        var pool = this.mysql.createPool(this.config);","        this.__pool = pool;","","        return pool;","      }","    },","    set: function(val) {","      this.__pool = val;","=======","    function encryptData(plaintext){","        var hmac = digest.call(this.secret, plaintext);","=======","","  return pt.join('');","}",">>>>>>> Version bump; v2.1.3","","","module.exports = function(connect) {","  var Store = connect.Store || connect.session.Store,","      TableName = 'sessions';","","  function MySQLStore(options) {","    var cleanup = true,","        heartbeat = 30000;","","    Store.call(this, options);","","    if (options.hasOwnProperty('cleanup'))","      cleanup = options.cleanup;","","    if (options.hasOwnProperty('table'))","      TableName = options.table;","","    if (options.hasOwnProperty('retries'))","      this.numRetries = options.retries;","","    if (options.hasOwnProperty('secret')) {","      this.secret = options.secret;","","=======","","  pt.push(cipher.update(ct, 'hex', 'utf8'));","  pt.push(cipher.final('utf8'));","","  return pt.join('');","}","","","module.exports = function(connect) {","  var Store = connect.Store || connect.session.Store,","      TableName = 'sessions';","","  function MySQLStore(options) {","    var cleanup = true,","        heartbeat = 30000;","","    Store.call(this, options);","","    if (options.hasOwnProperty('cleanup'))","      cleanup = options.cleanup;","","    if (options.hasOwnProperty('table'))","      TableName = options.table;","","    if (options.hasOwnProperty('retries'))","      this.numRetries = options.retries;","","    if (options.hasOwnProperty('secret')) {","      this.secret = options.secret;","",">>>>>>> Dependency update & version bump","      if (options.hasOwnProperty('algorithm'))","        this.algorithm = options.algorithm || 'aes-256-ctr';","    }","","    if (options.hasOwnProperty('pool')) {","      var pool = options.pool;","      if (isFunction(pool.getConnection)) {","        this.usePool = true;","        this.pool = pool;","      } else if (pool === true) {","        this.usePool = true;","      }","    }","","    if (options.hasOwnProperty('keepalive')) {","      var keepalive = options.keepalive;","      if (isNumber(keepalive)) {","        heartbeat = keepalive;","      } else if (!keepalive) {","        heartbeat = -1;","      }","    }","<<<<<<< HEAD","","    this.config = options.config;","","    if (this.usePool && heartbeat > 0) {","      var keepAlive = function keepAlive() {","        this.query(function(connection, done) {","          connection.ping();","          done();","        }, function noop() {});","      }.bind(this);","","      setInterval(keepAlive, heartbeat);","=======","","    this.config = options.config;","","    if (this.usePool && heartbeat > 0) {","      var keepAlive = function keepAlive() {","        this.query(function(connection, done) {","          connection.ping();","          done();","        }, function noop() {});","      }.bind(this);","","      setInterval(keepAlive, heartbeat);","    }","","    var cleanupQuery = 'DELETE FROM `' + TableName +","      '` WHERE `expires` > 0 and `expires` < UNIX_TIMESTAMP()';","    var nodeCleanup = function() {","      this.query(function(connection, done) {","        connection.query(cleanupQuery, function(err) {","          done(err);","        });","      }, function noop() {});","    }.bind(this);","","    this.query(function(connection, done) {","      connection.query('CREATE TABLE IF NOT EXISTS `' + TableName +","        '` (`sid` VARCHAR(255) NOT NULL, `session` TEXT NOT NULL, `expires` INT, PRIMARY KEY (`sid`) ) CHARACTER SET utf8 COLLATE utf8_unicode_ci',","        function(err) {","          if (err) done(err);","          else if (cleanup) {","            connection.query('SET GLOBAL event_scheduler = 1', function(","              err) {","              if (err) {","                if (err.code !== 'ER_SPECIFIC_ACCESS_DENIED_ERROR')","                  done(err);","                else {","                  setInterval(nodeCleanup, 900000);","                  done();","                }","              } else {","                connection.query(","                  'CREATE EVENT IF NOT EXISTS `sess_cleanup` ON SCHEDULE EVERY 15 MINUTE DO ' +","                  cleanupQuery,","                  function(err) {","                    done(err);","                  });","              }","            });","          } else done();","        });","    }, function(err) {","      if (err) throw err;","    });","  }","","  util.inherits(MySQLStore, Store);","","  Object.defineProperty(MySQLStore.prototype, 'mysql', {","    get: function() {","      if (this.__mysql) return this.__mysql;","      else {","        var mysql = null;","        try {","          mysql = require('mysql');","          this.__mysql = mysql;","        } catch (err) {","          throw new Error('mysql module is not installed!');","        }","","        return mysql;","      }","    }","  });","","  Object.defineProperty(MySQLStore.prototype, 'pool', {","    get: function() {","      if (this.__pool) return this.__pool;","      else {","        var pool = this.mysql.createPool(this.config);","        this.__pool = pool;","","        return pool;","      }","    },","    set: function(val) {","      this.__pool = val;","    }","  });","","  MySQLStore.prototype.query = function(query, callback) {","    var usePool = this.usePool,","      pool = this.pool,","      config = this.config,","      mysql = this.mysql,","      tries = 0,","      maxTries = (this.numRetries || 3) + 1,","      error = function(err) {","        if (err.code === 'PROTOCOL_CONNECTION_LOST') {","          retry();","        } else callback(err);","      },","      release = function(connection) {","        return function(err, value) {","          connection.removeListener('error', error);","          if (err) callback(err);","          else {","            if (usePool) connection.release();","            else connection.end();","            if (typeof callback === 'function') callback(null, value);","          }","        };","      },","      execute = function(connection) {","        connection.on('error', error);","        try {","          query(connection, release(connection));","        } catch (err) {","          retry();","        }","      },","      retry = function(prevErr) {","        if (tries < maxTries) {","          tries++;","          try {","            if (usePool) {","              pool.getConnection(function(err, connection) {","                if (err) callback(err);","                else execute(connection);","              });","            } else {","              var connection = mysql.createConnection(config);","              connection.connect(function(err) {","                if (err) callback(err);","                else execute(connection);","              });","            }","          } catch (err) {","            retry(err);","          }","        }","        //TODO: Use \"prevError\" to report an inner error (will require error lib?)","        else callback(new Error(\"Connection failed too many times in a row\"));","      };","","    retry();","  };","","  MySQLStore.prototype.get = function(sid, callback) {","    var secret = this.secret;","    self = this;","","    this.query(function(connection, done) {","      connection.query('SELECT `session` FROM `' + TableName +","        '` WHERE `sid` = ?', [sid],","        function(err, result) {","          if (result && result[0] && result[0].session) {","            try {","              var session = JSON.parse(result[0].session);","              ","              if (secret) {","                session = JSON.parse(session, secret, this.algo);","              }","              ","              done(null, session);","            } catch (cryptoErr) {","              done(cryptoErr);","            }","          } else {","            done(err);","          }","        });","    }, callback);","  };","","<<<<<<< HEAD","    var cleanupQuery = 'DELETE FROM `' + TableName +","      '` WHERE `expires` > 0 and `expires` < UNIX_TIMESTAMP()';","    var nodeCleanup = function() {","      this.query(function(connection, done) {","        connection.query(cleanupQuery, function(err) {","          done(err);","        });","      }, function noop() {});","    }.bind(this);","","    this.query(function(connection, done) {","      connection.query('CREATE TABLE IF NOT EXISTS `' + TableName +","        '` (`sid` VARCHAR(255) NOT NULL, `session` TEXT NOT NULL, `expires` INT, PRIMARY KEY (`sid`) ) CHARACTER SET utf8 COLLATE utf8_unicode_ci',","        function(err) {","          if (err) done(err);","          else if (cleanup) {","            connection.query('SET GLOBAL event_scheduler = 1', function(","              err) {","              if (err) {","                if (err.code !== 'ER_SPECIFIC_ACCESS_DENIED_ERROR')","                  done(err);","                else {","                  setInterval(nodeCleanup, 900000);","                  done();","                }","              } else {","                connection.query(","                  'CREATE EVENT IF NOT EXISTS `sess_cleanup` ON SCHEDULE EVERY 15 MINUTE DO ' +","                  cleanupQuery,","                  function(err) {","                    done(err);","                  });","              }","            });","          } else done();","        });","    }, function(err) {","      if (err) throw err;","    });","  }","","  util.inherits(MySQLStore, Store);","","  Object.defineProperty(MySQLStore.prototype, 'mysql', {","    get: function() {","      if (this.__mysql) return this.__mysql;","      else {","        var mysql = null;","        try {","          mysql = require('mysql');","          this.__mysql = mysql;","        } catch (err) {","          throw new Error('mysql module is not installed!');","        }","","        return mysql;","      }","    }","  });","","  Object.defineProperty(MySQLStore.prototype, 'pool', {","    get: function() {","      if (this.__pool) return this.__pool;","      else {","        var pool = this.mysql.createPool(this.config);","        this.__pool = pool;","","        return pool;","      }","    },","    set: function(val) {","      this.__pool = val;","    }","  });","","  MySQLStore.prototype.query = function(query, callback) {","    var usePool = this.usePool,","      pool = this.pool,","      config = this.config,","      mysql = this.mysql,","      tries = 0,","      maxTries = (this.numRetries || 3) + 1,","      error = function(err) {","        if (err.code === 'PROTOCOL_CONNECTION_LOST') {","          retry();","        } else callback(err);","      },","      release = function(connection) {","        return function(err, value) {","          connection.removeListener('error', error);","          if (err) callback(err);","          else {","            if (usePool) connection.release();","            else connection.end();","            if (typeof callback === 'function') callback(null, value);","          }","        };","      },","      execute = function(connection) {","        connection.on('error', error);","        try {","          query(connection, release(connection));","        } catch (err) {","          retry();","        }","      },","      retry = function(prevErr) {","        if (tries < maxTries) {","          tries++;","          try {","            if (usePool) {","              pool.getConnection(function(err, connection) {","                if (err) callback(err);","                else execute(connection);","              });","            } else {","              var connection = mysql.createConnection(config);","              connection.connect(function(err) {","                if (err) callback(err);","                else execute(connection);","              });","            }","          } catch (err) {","            retry(err);","          }","        }","        //TODO: Use \"prevError\" to report an inner error (will require error lib?)","        else callback(new Error(\"Connection failed too many times in a row\"));","      };","","    retry();","  };","","  MySQLStore.prototype.get = function(sid, callback) {","    var secret = this.secret;","    self = this;","","    this.query(function(connection, done) {","      connection.query('SELECT `session` FROM `' + TableName +","        '` WHERE `sid` = ?', [sid],","        function(err, result) {","          if (result && result[0] && result[0].session) {","            try {","<<<<<<< HEAD","              var session;","              ","              if (secret) {","                session = JSON.parse(result[0].session, secret, this.algo);","              } else {","                session = JSON.parse(result[0].session);","=======","              var session = JSON.parse(result[0].session);","              ","              if (secret) {","                session = JSON.parse(session, secret, this.algo);",">>>>>>> Version bump; v2.1.3","              }","              ","              done(null, session);","            } catch (cryptoErr) {","              done(cryptoErr);","            }","          } else {","            done(err);","          }","        });","    }, callback);","  };","","=======",">>>>>>> Dependency update & version bump","  MySQLStore.prototype.set = function(sid, session, callback) {","    var expires = new Date(session.cookie.expires).getTime() / 1000;","","    session = JSON.stringify(session);","","    if (this.secret) {","      session = encryptData(session, this.secret, this.algorithm);","    }","","    this.query(function(connection, done) {","      connection.query('INSERT INTO `' + TableName +","        '` (`sid`, `session`, `expires`) VALUES(?, ?, ?) ON DUPLICATE KEY UPDATE `session` = ?, `expires` = ?', [","          sid, session, expires, session, expires","        ],","        function(err) {","          done(err);","        });","    }, callback);","  };","","  MySQLStore.prototype.destroy = function(sid, callback) {","    this.query(function(connection, done) {","      connection.query('DELETE FROM `' + TableName +","        '` WHERE `sid` = ?', [sid],","        function(err) {","          done(err);","        });","    }, callback);","  };","","","  return MySQLStore;","};",""],"id":105},{"start":{"row":0,"column":0},"end":{"row":328,"column":2},"action":"insert","lines":["/*!"," * connect-mysql"," * Author: Nathan LaFreniere <nlf@andyet.net>"," */","","var util = require('util');","var crypto = require('crypto');","","function isFunction(obj) {","  return Object.prototype.toString.call(obj) == '[object Function]';","}","","function isNumber(obj) {","  return Object.prototype.toString.call(obj) == '[object Number]';","}","","function encryptData(plaintext, secret, algo) {","  var hmac = digest(secret, plaintext);","","  var obj = {","    hmac: hmac,","    pt: plaintext","  };","","  var ct = encrypt(secret, JSON.stringify(obj), algo);","","  return ct;","}","","function decryptData(ciphertext, secret) {","  var pt = decrypt(secret, ciphertext);","  var obj = JSON.parse(pt);","  var hmac = digest(secret, JSON.stringify(obj.pt));","","  if (hmac != obj.hmac) {","    throw 'Encrypted session was tampered with!';","  }","","  return obj.pt;","}","","function digest(key, obj) {","  var hmac = crypto.createHmac('sha512', key);","  hmac.setEncoding('hex');","  hmac.write(obj);","  hmac.end();","  return hmac.read();","}","","function encrypt(key, pt, algo) {","  algo = algo || 'aes-256-ctr';","  pt = (Buffer.isBuffer(pt)) ? pt : new Buffer(pt);","","  var cipher = crypto.createCipher(algo, key);","  var ct = [];","","  ct.push(cipher.update(pt, 'buffer', 'hex'));","  ct.push(cipher.final('hex'));","","  return ct.join('');","}","","function decrypt(key, ct, algo) {","  algo = algo || 'aes-256-ctr';","  var cipher = crypto.createDecipher(algo, key);","  var pt = [];","","  pt.push(cipher.update(ct, 'hex', 'utf8'));","  pt.push(cipher.final('utf8'));","","  return pt.join('');","}","","","module.exports = function(connect) {","  var Store = connect.Store || connect.session.Store,","      TableName = 'sessions';","","  function MySQLStore(options) {","    var cleanup = true,","        heartbeat = 30000;","","    Store.call(this, options);","","    if (options.hasOwnProperty('cleanup'))","      cleanup = options.cleanup;","","    if (options.hasOwnProperty('table'))","      TableName = options.table;","","    if (options.hasOwnProperty('retries'))","      this.numRetries = options.retries;","","    if (options.hasOwnProperty('secret')) {","      this.secret = options.secret;","","      if (options.hasOwnProperty('algorithm'))","        this.algorithm = options.algorithm || 'aes-256-ctr';","    }","","    if (options.hasOwnProperty('pool')) {","      var pool = options.pool;","      if (isFunction(pool.getConnection)) {","        this.usePool = true;","        this.pool = pool;","      } else if (pool === true) {","        this.usePool = true;","      }","    }","","    if (options.hasOwnProperty('keepalive')) {","      var keepalive = options.keepalive;","      if (isNumber(keepalive)) {","        heartbeat = keepalive;","      } else if (!keepalive) {","        heartbeat = -1;","      }","    }","","    this.config = options.config;","","    if (this.usePool && heartbeat > 0) {","      var keepAlive = function keepAlive() {","        this.query(function(connection, done) {","          connection.ping();","          done();","        }, function noop() {});","      }.bind(this);","","      setInterval(keepAlive, heartbeat);","    }","","    var cleanupQuery = 'DELETE FROM `' + TableName + '` WHERE id IN (' +","      'SELECT temp.id FROM (' +","        'SELECT `id` FROM `' + TableName + '` WHERE `expires` > 0 AND `expires` < UNIX_TIMESTAMP()' +","      ') AS temp' +","    ');'","","    var nodeCleanup = function() {","      this.query(function(connection, done) {","        connection.query(cleanupQuery, function(err) {","          done(err);","        });","      }, function noop() {});","    }.bind(this);","","    this.query(function(connection, done) {","      connection.query('CREATE TABLE IF NOT EXISTS `' + TableName +","        '` (`sid` VARCHAR(255) NOT NULL, `session` TEXT NOT NULL, `expires` INT, PRIMARY KEY (`sid`) ) CHARACTER SET utf8 COLLATE utf8_unicode_ci',","        function(err) {","          if (err) done(err);","          else if (cleanup) {","            connection.query('SET GLOBAL event_scheduler = 1', function(","              err) {","              if (err) {","                if (err.code !== 'ER_SPECIFIC_ACCESS_DENIED_ERROR')","                  done(err);","                else {","                  setInterval(nodeCleanup, 900000);","                  done();","                }","              } else {","                connection.query(","                  'CREATE EVENT IF NOT EXISTS `sess_cleanup` ON SCHEDULE EVERY 15 MINUTE DO ' +","                  cleanupQuery,","                  function(err) {","                    done(err);","                  });","              }","            });","          } else done();","        });","    }, function(err) {","      if (err) throw err;","    });","  }","","  util.inherits(MySQLStore, Store);","","  Object.defineProperty(MySQLStore.prototype, 'mysql', {","    get: function() {","      if (this.__mysql) return this.__mysql;","      else {","        var mysql = null;","        try {","          mysql = require('mysql');","          this.__mysql = mysql;","        } catch (err) {","          throw new Error('mysql module is not installed!');","        }","","        return mysql;","      }","    }","  });","","  Object.defineProperty(MySQLStore.prototype, 'pool', {","    get: function() {","      if (this.__pool) return this.__pool;","      else {","        var pool = this.mysql.createPool(this.config);","        this.__pool = pool;","","        return pool;","      }","    },","    set: function(val) {","      this.__pool = val;","    }","  });","","  MySQLStore.prototype.query = function(query, callback) {","    var usePool = this.usePool,","      pool = this.pool,","      config = this.config,","      mysql = this.mysql,","      tries = 0,","      maxTries = (this.numRetries || 3) + 1,","      error = function(err) {","        if (err.code === 'PROTOCOL_CONNECTION_LOST') {","          retry();","        } else callback(err);","      },","      release = function(connection) {","        return function(err, value) {","          connection.removeListener('error', error);","          if (err) callback(err);","          else {","            if (usePool) connection.release();","            else connection.end();","            if (typeof callback === 'function') callback(null, value);","          }","        };","      },","      execute = function(connection) {","        connection.on('error', error);","        try {","          query(connection, release(connection));","        } catch (err) {","          retry();","        }","      },","      retry = function(prevErr) {","        if (tries < maxTries) {","          tries++;","          try {","            if (usePool) {","              pool.getConnection(function(err, connection) {","                if (err) callback(err);","                else execute(connection);","              });","            } else {","              var connection = mysql.createConnection(config);","              connection.connect(function(err) {","                if (err) callback(err);","                else execute(connection);","              });","            }","          } catch (err) {","            retry(err);","          }","        }","        //TODO: Use \"prevError\" to report an inner error (will require error lib?)","        else callback(new Error(\"Connection failed too many times in a row\"));","      };","","    retry();","  };","","  MySQLStore.prototype.get = function(sid, callback) {","    var secret = this.secret;","    self = this;","","    this.query(function(connection, done) {","      connection.query('SELECT `session` FROM `' + TableName +","        '` WHERE `sid` = ?', [sid],","        function(err, result) {","          if (result && result[0] && result[0].session) {","            try {","              var session = JSON.parse(result[0].session);","              ","              if (secret) {","                session = JSON.parse(session, secret, this.algo);","              }","              ","              done(null, session);","            } catch (cryptoErr) {","              done(cryptoErr);","            }","          } else {","            done(err);","          }","        });","    }, callback);","  };","","  MySQLStore.prototype.set = function(sid, session, callback) {","    var expires = new Date(session.cookie.expires).getTime() / 1000;","","    session = JSON.stringify(session);","","    if (this.secret) {","      session = encryptData(session, this.secret, this.algorithm);","    }","","    this.query(function(connection, done) {","      connection.query('INSERT INTO `' + TableName +","        '` (`sid`, `session`, `expires`) VALUES(?, ?, ?) ON DUPLICATE KEY UPDATE `session` = ?, `expires` = ?', [","          sid, session, expires, session, expires","        ],","        function(err) {","          done(err);","        });","    }, callback);","  };","","  MySQLStore.prototype.destroy = function(sid, callback) {","    this.query(function(connection, done) {","      connection.query('DELETE FROM `' + TableName +","        '` WHERE `sid` = ?', [sid],","        function(err) {","          done(err);","        });","    }, callback);","  };","","","  return MySQLStore;","};"]}],[{"start":{"row":279,"column":25},"end":{"row":279,"column":57},"action":"remove","lines":[" = JSON.parse(result[0].session)"],"id":106,"ignore":true},{"start":{"row":282,"column":37},"end":{"row":282,"column":63},"action":"remove","lines":["session, secret, this.algo"]},{"start":{"row":282,"column":37},"end":{"row":285,"column":54},"action":"insert","lines":["decryptData(result[0].session, secret,","                  this.algo));","              } else {","                session = JSON.parse(result[0].session"]},{"start":{"row":287,"column":0},"end":{"row":287,"column":14},"action":"remove","lines":["              "]}],[{"start":{"row":331,"column":0},"end":{"row":331,"column":2},"action":"remove","lines":["};"],"id":107,"ignore":true},{"start":{"row":331,"column":0},"end":{"row":336,"column":0},"action":"insert","lines":["<<<<<<< HEAD","};","=======","};",">>>>>>> 58a5bdc810464cd38d08debd464c0cf4803c5972",""]}],[{"start":{"row":0,"column":0},"end":{"row":336,"column":0},"action":"remove","lines":["/*!"," * connect-mysql"," * Author: Nathan LaFreniere <nlf@andyet.net>"," */","","var util = require('util');","var crypto = require('crypto');","","function isFunction(obj) {","  return Object.prototype.toString.call(obj) == '[object Function]';","}","","function isNumber(obj) {","  return Object.prototype.toString.call(obj) == '[object Number]';","}","","function encryptData(plaintext, secret, algo) {","  var hmac = digest(secret, plaintext);","","  var obj = {","    hmac: hmac,","    pt: plaintext","  };","","  var ct = encrypt(secret, JSON.stringify(obj), algo);","","  return ct;","}","","function decryptData(ciphertext, secret) {","  var pt = decrypt(secret, ciphertext);","  var obj = JSON.parse(pt);","  var hmac = digest(secret, JSON.stringify(obj.pt));","","  if (hmac != obj.hmac) {","    throw 'Encrypted session was tampered with!';","  }","","  return obj.pt;","}","","function digest(key, obj) {","  var hmac = crypto.createHmac('sha512', key);","  hmac.setEncoding('hex');","  hmac.write(obj);","  hmac.end();","  return hmac.read();","}","","function encrypt(key, pt, algo) {","  algo = algo || 'aes-256-ctr';","  pt = (Buffer.isBuffer(pt)) ? pt : new Buffer(pt);","","  var cipher = crypto.createCipher(algo, key);","  var ct = [];","","  ct.push(cipher.update(pt, 'buffer', 'hex'));","  ct.push(cipher.final('hex'));","","  return ct.join('');","}","","function decrypt(key, ct, algo) {","  algo = algo || 'aes-256-ctr';","  var cipher = crypto.createDecipher(algo, key);","  var pt = [];","","  pt.push(cipher.update(ct, 'hex', 'utf8'));","  pt.push(cipher.final('utf8'));","","  return pt.join('');","}","","","module.exports = function(connect) {","  var Store = connect.Store || connect.session.Store,","      TableName = 'sessions';","","  function MySQLStore(options) {","    var cleanup = true,","        heartbeat = 30000;","","    Store.call(this, options);","","    if (options.hasOwnProperty('cleanup'))","      cleanup = options.cleanup;","","    if (options.hasOwnProperty('table'))","      TableName = options.table;","","    if (options.hasOwnProperty('retries'))","      this.numRetries = options.retries;","","    if (options.hasOwnProperty('secret')) {","      this.secret = options.secret;","","      if (options.hasOwnProperty('algorithm'))","        this.algorithm = options.algorithm || 'aes-256-ctr';","    }","","    if (options.hasOwnProperty('pool')) {","      var pool = options.pool;","      if (isFunction(pool.getConnection)) {","        this.usePool = true;","        this.pool = pool;","      } else if (pool === true) {","        this.usePool = true;","      }","    }","","    if (options.hasOwnProperty('keepalive')) {","      var keepalive = options.keepalive;","      if (isNumber(keepalive)) {","        heartbeat = keepalive;","      } else if (!keepalive) {","        heartbeat = -1;","      }","    }","","    this.config = options.config;","","    if (this.usePool && heartbeat > 0) {","      var keepAlive = function keepAlive() {","        this.query(function(connection, done) {","          connection.ping();","          done();","        }, function noop() {});","      }.bind(this);","","      setInterval(keepAlive, heartbeat);","    }","","    var cleanupQuery = 'DELETE FROM `' + TableName + '` WHERE id IN (' +","      'SELECT temp.id FROM (' +","        'SELECT `id` FROM `' + TableName + '` WHERE `expires` > 0 AND `expires` < UNIX_TIMESTAMP()' +","      ') AS temp' +","    ');'","","    var nodeCleanup = function() {","      this.query(function(connection, done) {","        connection.query(cleanupQuery, function(err) {","          done(err);","        });","      }, function noop() {});","    }.bind(this);","","    this.query(function(connection, done) {","      connection.query('CREATE TABLE IF NOT EXISTS `' + TableName +","        '` (`sid` VARCHAR(255) NOT NULL, `session` TEXT NOT NULL, `expires` INT, PRIMARY KEY (`sid`) ) CHARACTER SET utf8 COLLATE utf8_unicode_ci',","        function(err) {","          if (err) done(err);","          else if (cleanup) {","            connection.query('SET GLOBAL event_scheduler = 1', function(","              err) {","              if (err) {","                if (err.code !== 'ER_SPECIFIC_ACCESS_DENIED_ERROR')","                  done(err);","                else {","                  setInterval(nodeCleanup, 900000);","                  done();","                }","              } else {","                connection.query(","                  'CREATE EVENT IF NOT EXISTS `sess_cleanup` ON SCHEDULE EVERY 15 MINUTE DO ' +","                  cleanupQuery,","                  function(err) {","                    done(err);","                  });","              }","            });","          } else done();","        });","    }, function(err) {","      if (err) throw err;","    });","  }","","  util.inherits(MySQLStore, Store);","","  Object.defineProperty(MySQLStore.prototype, 'mysql', {","    get: function() {","      if (this.__mysql) return this.__mysql;","      else {","        var mysql = null;","        try {","          mysql = require('mysql');","          this.__mysql = mysql;","        } catch (err) {","          throw new Error('mysql module is not installed!');","        }","","        return mysql;","      }","    }","  });","","  Object.defineProperty(MySQLStore.prototype, 'pool', {","    get: function() {","      if (this.__pool) return this.__pool;","      else {","        var pool = this.mysql.createPool(this.config);","        this.__pool = pool;","","        return pool;","      }","    },","    set: function(val) {","      this.__pool = val;","    }","  });","","  MySQLStore.prototype.query = function(query, callback) {","    var usePool = this.usePool,","      pool = this.pool,","      config = this.config,","      mysql = this.mysql,","      tries = 0,","      maxTries = (this.numRetries || 3) + 1,","      error = function(err) {","        if (err.code === 'PROTOCOL_CONNECTION_LOST') {","          retry();","        } else callback(err);","      },","      release = function(connection) {","        return function(err, value) {","          connection.removeListener('error', error);","          if (err) callback(err);","          else {","            if (usePool) connection.release();","            else connection.end();","            if (typeof callback === 'function') callback(null, value);","          }","        };","      },","      execute = function(connection) {","        connection.on('error', error);","        try {","          query(connection, release(connection));","        } catch (err) {","          retry();","        }","      },","      retry = function(prevErr) {","        if (tries < maxTries) {","          tries++;","          try {","            if (usePool) {","              pool.getConnection(function(err, connection) {","                if (err) callback(err);","                else execute(connection);","              });","            } else {","              var connection = mysql.createConnection(config);","              connection.connect(function(err) {","                if (err) callback(err);","                else execute(connection);","              });","            }","          } catch (err) {","            retry(err);","          }","        }","        //TODO: Use \"prevError\" to report an inner error (will require error lib?)","        else callback(new Error(\"Connection failed too many times in a row\"));","      };","","    retry();","  };","","  MySQLStore.prototype.get = function(sid, callback) {","    var secret = this.secret;","    self = this;","","    this.query(function(connection, done) {","      connection.query('SELECT `session` FROM `' + TableName +","        '` WHERE `sid` = ?', [sid],","        function(err, result) {","          if (result && result[0] && result[0].session) {","            try {","              var session;","              ","              if (secret) {","                session = JSON.parse(decryptData(result[0].session, secret,","                  this.algo));","              } else {","                session = JSON.parse(result[0].session);","              }","","              done(null, session);","            } catch (cryptoErr) {","              done(cryptoErr);","            }","          } else {","            done(err);","          }","        });","    }, callback);","  };","","  MySQLStore.prototype.set = function(sid, session, callback) {","    var expires = new Date(session.cookie.expires).getTime() / 1000;","","    session = JSON.stringify(session);","","    if (this.secret) {","      session = encryptData(session, this.secret, this.algorithm);","    }","","    this.query(function(connection, done) {","      connection.query('INSERT INTO `' + TableName +","        '` (`sid`, `session`, `expires`) VALUES(?, ?, ?) ON DUPLICATE KEY UPDATE `session` = ?, `expires` = ?', [","          sid, session, expires, session, expires","        ],","        function(err) {","          done(err);","        });","    }, callback);","  };","","  MySQLStore.prototype.destroy = function(sid, callback) {","    this.query(function(connection, done) {","      connection.query('DELETE FROM `' + TableName +","        '` WHERE `sid` = ?', [sid],","        function(err) {","          done(err);","        });","    }, callback);","  };","","","  return MySQLStore;","<<<<<<< HEAD","};","=======","};",">>>>>>> 58a5bdc810464cd38d08debd464c0cf4803c5972",""],"id":108},{"start":{"row":0,"column":0},"end":{"row":328,"column":2},"action":"insert","lines":["/*!"," * connect-mysql"," * Author: Nathan LaFreniere <nlf@andyet.net>"," */","","var util = require('util');","var crypto = require('crypto');","","function isFunction(obj) {","  return Object.prototype.toString.call(obj) == '[object Function]';","}","","function isNumber(obj) {","  return Object.prototype.toString.call(obj) == '[object Number]';","}","","function encryptData(plaintext, secret, algo) {","  var hmac = digest(secret, plaintext);","","  var obj = {","    hmac: hmac,","    pt: plaintext","  };","","  var ct = encrypt(secret, JSON.stringify(obj), algo);","","  return ct;","}","","function decryptData(ciphertext, secret) {","  var pt = decrypt(secret, ciphertext);","  var obj = JSON.parse(pt);","  var hmac = digest(secret, JSON.stringify(obj.pt));","","  if (hmac != obj.hmac) {","    throw 'Encrypted session was tampered with!';","  }","","  return obj.pt;","}","","function digest(key, obj) {","  var hmac = crypto.createHmac('sha512', key);","  hmac.setEncoding('hex');","  hmac.write(obj);","  hmac.end();","  return hmac.read();","}","","function encrypt(key, pt, algo) {","  algo = algo || 'aes-256-ctr';","  pt = (Buffer.isBuffer(pt)) ? pt : new Buffer(pt);","","  var cipher = crypto.createCipher(algo, key);","  var ct = [];","","  ct.push(cipher.update(pt, 'buffer', 'hex'));","  ct.push(cipher.final('hex'));","","  return ct.join('');","}","","function decrypt(key, ct, algo) {","  algo = algo || 'aes-256-ctr';","  var cipher = crypto.createDecipher(algo, key);","  var pt = [];","","  pt.push(cipher.update(ct, 'hex', 'utf8'));","  pt.push(cipher.final('utf8'));","","  return pt.join('');","}","","","module.exports = function(connect) {","  var Store = connect.Store || connect.session.Store,","      TableName = 'sessions';","","  function MySQLStore(options) {","    var cleanup = true,","        heartbeat = 30000;","","    Store.call(this, options);","","    if (options.hasOwnProperty('cleanup'))","      cleanup = options.cleanup;","","    if (options.hasOwnProperty('table'))","      TableName = options.table;","","    if (options.hasOwnProperty('retries'))","      this.numRetries = options.retries;","","    if (options.hasOwnProperty('secret')) {","      this.secret = options.secret;","","      if (options.hasOwnProperty('algorithm'))","        this.algorithm = options.algorithm || 'aes-256-ctr';","    }","","    if (options.hasOwnProperty('pool')) {","      var pool = options.pool;","      if (isFunction(pool.getConnection)) {","        this.usePool = true;","        this.pool = pool;","      } else if (pool === true) {","        this.usePool = true;","      }","    }","","    if (options.hasOwnProperty('keepalive')) {","      var keepalive = options.keepalive;","      if (isNumber(keepalive)) {","        heartbeat = keepalive;","      } else if (!keepalive) {","        heartbeat = -1;","      }","    }","","    this.config = options.config;","","    if (this.usePool && heartbeat > 0) {","      var keepAlive = function keepAlive() {","        this.query(function(connection, done) {","          connection.ping();","          done();","        }, function noop() {});","      }.bind(this);","","      setInterval(keepAlive, heartbeat);","    }","","    var cleanupQuery = 'DELETE FROM `' + TableName + '` WHERE id IN (' +","      'SELECT temp.id FROM (' +","        'SELECT `id` FROM `' + TableName + '` WHERE `expires` > 0 AND `expires` < UNIX_TIMESTAMP()' +","      ') AS temp' +","    ');'","","    var nodeCleanup = function() {","      this.query(function(connection, done) {","        connection.query(cleanupQuery, function(err) {","          done(err);","        });","      }, function noop() {});","    }.bind(this);","","    this.query(function(connection, done) {","      connection.query('CREATE TABLE IF NOT EXISTS `' + TableName +","        '` (`sid` VARCHAR(255) NOT NULL, `session` TEXT NOT NULL, `expires` INT, PRIMARY KEY (`sid`) ) CHARACTER SET utf8 COLLATE utf8_unicode_ci',","        function(err) {","          if (err) done(err);","          else if (cleanup) {","            connection.query('SET GLOBAL event_scheduler = 1', function(","              err) {","              if (err) {","                if (err.code !== 'ER_SPECIFIC_ACCESS_DENIED_ERROR')","                  done(err);","                else {","                  setInterval(nodeCleanup, 900000);","                  done();","                }","              } else {","                connection.query(","                  'CREATE EVENT IF NOT EXISTS `sess_cleanup` ON SCHEDULE EVERY 15 MINUTE DO ' +","                  cleanupQuery,","                  function(err) {","                    done(err);","                  });","              }","            });","          } else done();","        });","    }, function(err) {","      if (err) throw err;","    });","  }","","  util.inherits(MySQLStore, Store);","","  Object.defineProperty(MySQLStore.prototype, 'mysql', {","    get: function() {","      if (this.__mysql) return this.__mysql;","      else {","        var mysql = null;","        try {","          mysql = require('mysql');","          this.__mysql = mysql;","        } catch (err) {","          throw new Error('mysql module is not installed!');","        }","","        return mysql;","      }","    }","  });","","  Object.defineProperty(MySQLStore.prototype, 'pool', {","    get: function() {","      if (this.__pool) return this.__pool;","      else {","        var pool = this.mysql.createPool(this.config);","        this.__pool = pool;","","        return pool;","      }","    },","    set: function(val) {","      this.__pool = val;","    }","  });","","  MySQLStore.prototype.query = function(query, callback) {","    var usePool = this.usePool,","      pool = this.pool,","      config = this.config,","      mysql = this.mysql,","      tries = 0,","      maxTries = (this.numRetries || 3) + 1,","      error = function(err) {","        if (err.code === 'PROTOCOL_CONNECTION_LOST') {","          retry();","        } else callback(err);","      },","      release = function(connection) {","        return function(err, value) {","          connection.removeListener('error', error);","          if (err) callback(err);","          else {","            if (usePool) connection.release();","            else connection.end();","            if (typeof callback === 'function') callback(null, value);","          }","        };","      },","      execute = function(connection) {","        connection.on('error', error);","        try {","          query(connection, release(connection));","        } catch (err) {","          retry();","        }","      },","      retry = function(prevErr) {","        if (tries < maxTries) {","          tries++;","          try {","            if (usePool) {","              pool.getConnection(function(err, connection) {","                if (err) callback(err);","                else execute(connection);","              });","            } else {","              var connection = mysql.createConnection(config);","              connection.connect(function(err) {","                if (err) callback(err);","                else execute(connection);","              });","            }","          } catch (err) {","            retry(err);","          }","        }","        //TODO: Use \"prevError\" to report an inner error (will require error lib?)","        else callback(new Error(\"Connection failed too many times in a row\"));","      };","","    retry();","  };","","  MySQLStore.prototype.get = function(sid, callback) {","    var secret = this.secret;","    self = this;","","    this.query(function(connection, done) {","      connection.query('SELECT `session` FROM `' + TableName +","        '` WHERE `sid` = ?', [sid],","        function(err, result) {","          if (result && result[0] && result[0].session) {","            try {","              var session = JSON.parse(result[0].session);","              ","              if (secret) {","                session = JSON.parse(session, secret, this.algo);","              }","              ","              done(null, session);","            } catch (cryptoErr) {","              done(cryptoErr);","            }","          } else {","            done(err);","          }","        });","    }, callback);","  };","","  MySQLStore.prototype.set = function(sid, session, callback) {","    var expires = new Date(session.cookie.expires).getTime() / 1000;","","    session = JSON.stringify(session);","","    if (this.secret) {","      session = encryptData(session, this.secret, this.algorithm);","    }","","    this.query(function(connection, done) {","      connection.query('INSERT INTO `' + TableName +","        '` (`sid`, `session`, `expires`) VALUES(?, ?, ?) ON DUPLICATE KEY UPDATE `session` = ?, `expires` = ?', [","          sid, session, expires, session, expires","        ],","        function(err) {","          done(err);","        });","    }, callback);","  };","","  MySQLStore.prototype.destroy = function(sid, callback) {","    this.query(function(connection, done) {","      connection.query('DELETE FROM `' + TableName +","        '` WHERE `sid` = ?', [sid],","        function(err) {","          done(err);","        });","    }, callback);","  };","","","  return MySQLStore;","};"]}],[{"start":{"row":279,"column":25},"end":{"row":279,"column":57},"action":"remove","lines":[" = JSON.parse(result[0].session)"],"id":109,"ignore":true},{"start":{"row":282,"column":37},"end":{"row":282,"column":63},"action":"remove","lines":["session, secret, this.algo"]},{"start":{"row":282,"column":37},"end":{"row":285,"column":54},"action":"insert","lines":["decryptData(result[0].session, secret,","                  this.algo));","              } else {","                session = JSON.parse(result[0].session"]},{"start":{"row":287,"column":0},"end":{"row":287,"column":14},"action":"remove","lines":["              "]},{"start":{"row":331,"column":2},"end":{"row":332,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":279,"column":0},"end":{"row":280,"column":0},"action":"insert","lines":["<<<<<<< HEAD",""],"id":110,"ignore":true},{"start":{"row":289,"column":0},"end":{"row":297,"column":0},"action":"insert","lines":["=======","              var session = JSON.parse(result[0].session);","              ","              if (secret) {","                session = JSON.parse(session, secret, this.algo);","              }","              ",">>>>>>> v2.1.4",""]},{"start":{"row":340,"column":2},"end":{"row":341,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":0,"column":0},"end":{"row":340,"column":2},"action":"remove","lines":["/*!"," * connect-mysql"," * Author: Nathan LaFreniere <nlf@andyet.net>"," */","","var util = require('util');","var crypto = require('crypto');","","function isFunction(obj) {","  return Object.prototype.toString.call(obj) == '[object Function]';","}","","function isNumber(obj) {","  return Object.prototype.toString.call(obj) == '[object Number]';","}","","function encryptData(plaintext, secret, algo) {","  var hmac = digest(secret, plaintext);","","  var obj = {","    hmac: hmac,","    pt: plaintext","  };","","  var ct = encrypt(secret, JSON.stringify(obj), algo);","","  return ct;","}","","function decryptData(ciphertext, secret) {","  var pt = decrypt(secret, ciphertext);","  var obj = JSON.parse(pt);","  var hmac = digest(secret, JSON.stringify(obj.pt));","","  if (hmac != obj.hmac) {","    throw 'Encrypted session was tampered with!';","  }","","  return obj.pt;","}","","function digest(key, obj) {","  var hmac = crypto.createHmac('sha512', key);","  hmac.setEncoding('hex');","  hmac.write(obj);","  hmac.end();","  return hmac.read();","}","","function encrypt(key, pt, algo) {","  algo = algo || 'aes-256-ctr';","  pt = (Buffer.isBuffer(pt)) ? pt : new Buffer(pt);","","  var cipher = crypto.createCipher(algo, key);","  var ct = [];","","  ct.push(cipher.update(pt, 'buffer', 'hex'));","  ct.push(cipher.final('hex'));","","  return ct.join('');","}","","function decrypt(key, ct, algo) {","  algo = algo || 'aes-256-ctr';","  var cipher = crypto.createDecipher(algo, key);","  var pt = [];","","  pt.push(cipher.update(ct, 'hex', 'utf8'));","  pt.push(cipher.final('utf8'));","","  return pt.join('');","}","","","module.exports = function(connect) {","  var Store = connect.Store || connect.session.Store,","      TableName = 'sessions';","","  function MySQLStore(options) {","    var cleanup = true,","        heartbeat = 30000;","","    Store.call(this, options);","","    if (options.hasOwnProperty('cleanup'))","      cleanup = options.cleanup;","","    if (options.hasOwnProperty('table'))","      TableName = options.table;","","    if (options.hasOwnProperty('retries'))","      this.numRetries = options.retries;","","    if (options.hasOwnProperty('secret')) {","      this.secret = options.secret;","","      if (options.hasOwnProperty('algorithm'))","        this.algorithm = options.algorithm || 'aes-256-ctr';","    }","","    if (options.hasOwnProperty('pool')) {","      var pool = options.pool;","      if (isFunction(pool.getConnection)) {","        this.usePool = true;","        this.pool = pool;","      } else if (pool === true) {","        this.usePool = true;","      }","    }","","    if (options.hasOwnProperty('keepalive')) {","      var keepalive = options.keepalive;","      if (isNumber(keepalive)) {","        heartbeat = keepalive;","      } else if (!keepalive) {","        heartbeat = -1;","      }","    }","","    this.config = options.config;","","    if (this.usePool && heartbeat > 0) {","      var keepAlive = function keepAlive() {","        this.query(function(connection, done) {","          connection.ping();","          done();","        }, function noop() {});","      }.bind(this);","","      setInterval(keepAlive, heartbeat);","    }","","    var cleanupQuery = 'DELETE FROM `' + TableName + '` WHERE id IN (' +","      'SELECT temp.id FROM (' +","        'SELECT `id` FROM `' + TableName + '` WHERE `expires` > 0 AND `expires` < UNIX_TIMESTAMP()' +","      ') AS temp' +","    ');'","","    var nodeCleanup = function() {","      this.query(function(connection, done) {","        connection.query(cleanupQuery, function(err) {","          done(err);","        });","      }, function noop() {});","    }.bind(this);","","    this.query(function(connection, done) {","      connection.query('CREATE TABLE IF NOT EXISTS `' + TableName +","        '` (`sid` VARCHAR(255) NOT NULL, `session` TEXT NOT NULL, `expires` INT, PRIMARY KEY (`sid`) ) CHARACTER SET utf8 COLLATE utf8_unicode_ci',","        function(err) {","          if (err) done(err);","          else if (cleanup) {","            connection.query('SET GLOBAL event_scheduler = 1', function(","              err) {","              if (err) {","                if (err.code !== 'ER_SPECIFIC_ACCESS_DENIED_ERROR')","                  done(err);","                else {","                  setInterval(nodeCleanup, 900000);","                  done();","                }","              } else {","                connection.query(","                  'CREATE EVENT IF NOT EXISTS `sess_cleanup` ON SCHEDULE EVERY 15 MINUTE DO ' +","                  cleanupQuery,","                  function(err) {","                    done(err);","                  });","              }","            });","          } else done();","        });","    }, function(err) {","      if (err) throw err;","    });","  }","","  util.inherits(MySQLStore, Store);","","  Object.defineProperty(MySQLStore.prototype, 'mysql', {","    get: function() {","      if (this.__mysql) return this.__mysql;","      else {","        var mysql = null;","        try {","          mysql = require('mysql');","          this.__mysql = mysql;","        } catch (err) {","          throw new Error('mysql module is not installed!');","        }","","        return mysql;","      }","    }","  });","","  Object.defineProperty(MySQLStore.prototype, 'pool', {","    get: function() {","      if (this.__pool) return this.__pool;","      else {","        var pool = this.mysql.createPool(this.config);","        this.__pool = pool;","","        return pool;","      }","    },","    set: function(val) {","      this.__pool = val;","    }","  });","","  MySQLStore.prototype.query = function(query, callback) {","    var usePool = this.usePool,","      pool = this.pool,","      config = this.config,","      mysql = this.mysql,","      tries = 0,","      maxTries = (this.numRetries || 3) + 1,","      error = function(err) {","        if (err.code === 'PROTOCOL_CONNECTION_LOST') {","          retry();","        } else callback(err);","      },","      release = function(connection) {","        return function(err, value) {","          connection.removeListener('error', error);","          if (err) callback(err);","          else {","            if (usePool) connection.release();","            else connection.end();","            if (typeof callback === 'function') callback(null, value);","          }","        };","      },","      execute = function(connection) {","        connection.on('error', error);","        try {","          query(connection, release(connection));","        } catch (err) {","          retry();","        }","      },","      retry = function(prevErr) {","        if (tries < maxTries) {","          tries++;","          try {","            if (usePool) {","              pool.getConnection(function(err, connection) {","                if (err) callback(err);","                else execute(connection);","              });","            } else {","              var connection = mysql.createConnection(config);","              connection.connect(function(err) {","                if (err) callback(err);","                else execute(connection);","              });","            }","          } catch (err) {","            retry(err);","          }","        }","        //TODO: Use \"prevError\" to report an inner error (will require error lib?)","        else callback(new Error(\"Connection failed too many times in a row\"));","      };","","    retry();","  };","","  MySQLStore.prototype.get = function(sid, callback) {","    var secret = this.secret;","    self = this;","","    this.query(function(connection, done) {","      connection.query('SELECT `session` FROM `' + TableName +","        '` WHERE `sid` = ?', [sid],","        function(err, result) {","          if (result && result[0] && result[0].session) {","            try {","<<<<<<< HEAD","              var session;","              ","              if (secret) {","                session = JSON.parse(decryptData(result[0].session, secret,","                  this.algo));","              } else {","                session = JSON.parse(result[0].session);","              }","","=======","              var session = JSON.parse(result[0].session);","              ","              if (secret) {","                session = JSON.parse(session, secret, this.algo);","              }","              ",">>>>>>> v2.1.4","              done(null, session);","            } catch (cryptoErr) {","              done(cryptoErr);","            }","          } else {","            done(err);","          }","        });","    }, callback);","  };","","  MySQLStore.prototype.set = function(sid, session, callback) {","    var expires = new Date(session.cookie.expires).getTime() / 1000;","","    session = JSON.stringify(session);","","    if (this.secret) {","      session = encryptData(session, this.secret, this.algorithm);","    }","","    this.query(function(connection, done) {","      connection.query('INSERT INTO `' + TableName +","        '` (`sid`, `session`, `expires`) VALUES(?, ?, ?) ON DUPLICATE KEY UPDATE `session` = ?, `expires` = ?', [","          sid, session, expires, session, expires","        ],","        function(err) {","          done(err);","        });","    }, callback);","  };","","  MySQLStore.prototype.destroy = function(sid, callback) {","    this.query(function(connection, done) {","      connection.query('DELETE FROM `' + TableName +","        '` WHERE `sid` = ?', [sid],","        function(err) {","          done(err);","        });","    }, callback);","  };","","","  return MySQLStore;","};"],"id":111},{"start":{"row":0,"column":0},"end":{"row":328,"column":2},"action":"insert","lines":["/*!"," * connect-mysql"," * Author: Nathan LaFreniere <nlf@andyet.net>"," */","","var util = require('util');","var crypto = require('crypto');","","function isFunction(obj) {","  return Object.prototype.toString.call(obj) == '[object Function]';","}","","function isNumber(obj) {","  return Object.prototype.toString.call(obj) == '[object Number]';","}","","function encryptData(plaintext, secret, algo) {","  var hmac = digest(secret, plaintext);","","  var obj = {","    hmac: hmac,","    pt: plaintext","  };","","  var ct = encrypt(secret, JSON.stringify(obj), algo);","","  return ct;","}","","function decryptData(ciphertext, secret) {","  var pt = decrypt(secret, ciphertext);","  var obj = JSON.parse(pt);","  var hmac = digest(secret, JSON.stringify(obj.pt));","","  if (hmac != obj.hmac) {","    throw 'Encrypted session was tampered with!';","  }","","  return obj.pt;","}","","function digest(key, obj) {","  var hmac = crypto.createHmac('sha512', key);","  hmac.setEncoding('hex');","  hmac.write(obj);","  hmac.end();","  return hmac.read();","}","","function encrypt(key, pt, algo) {","  algo = algo || 'aes-256-ctr';","  pt = (Buffer.isBuffer(pt)) ? pt : new Buffer(pt);","","  var cipher = crypto.createCipher(algo, key);","  var ct = [];","","  ct.push(cipher.update(pt, 'buffer', 'hex'));","  ct.push(cipher.final('hex'));","","  return ct.join('');","}","","function decrypt(key, ct, algo) {","  algo = algo || 'aes-256-ctr';","  var cipher = crypto.createDecipher(algo, key);","  var pt = [];","","  pt.push(cipher.update(ct, 'hex', 'utf8'));","  pt.push(cipher.final('utf8'));","","  return pt.join('');","}","","","module.exports = function(connect) {","  var Store = connect.Store || connect.session.Store,","      TableName = 'sessions';","","  function MySQLStore(options) {","    var cleanup = true,","        heartbeat = 30000;","","    Store.call(this, options);","","    if (options.hasOwnProperty('cleanup'))","      cleanup = options.cleanup;","","    if (options.hasOwnProperty('table'))","      TableName = options.table;","","    if (options.hasOwnProperty('retries'))","      this.numRetries = options.retries;","","    if (options.hasOwnProperty('secret')) {","      this.secret = options.secret;","","      if (options.hasOwnProperty('algorithm'))","        this.algorithm = options.algorithm || 'aes-256-ctr';","    }","","    if (options.hasOwnProperty('pool')) {","      var pool = options.pool;","      if (isFunction(pool.getConnection)) {","        this.usePool = true;","        this.pool = pool;","      } else if (pool === true) {","        this.usePool = true;","      }","    }","","    if (options.hasOwnProperty('keepalive')) {","      var keepalive = options.keepalive;","      if (isNumber(keepalive)) {","        heartbeat = keepalive;","      } else if (!keepalive) {","        heartbeat = -1;","      }","    }","","    this.config = options.config;","","    if (this.usePool && heartbeat > 0) {","      var keepAlive = function keepAlive() {","        this.query(function(connection, done) {","          connection.ping();","          done();","        }, function noop() {});","      }.bind(this);","","      setInterval(keepAlive, heartbeat);","    }","","    var cleanupQuery = 'DELETE FROM `' + TableName + '` WHERE id IN (' +","      'SELECT temp.id FROM (' +","        'SELECT `id` FROM `' + TableName + '` WHERE `expires` > 0 AND `expires` < UNIX_TIMESTAMP()' +","      ') AS temp' +","    ');'","","    var nodeCleanup = function() {","      this.query(function(connection, done) {","        connection.query(cleanupQuery, function(err) {","          done(err);","        });","      }, function noop() {});","    }.bind(this);","","    this.query(function(connection, done) {","      connection.query('CREATE TABLE IF NOT EXISTS `' + TableName +","        '` (`sid` VARCHAR(255) NOT NULL, `session` TEXT NOT NULL, `expires` INT, PRIMARY KEY (`sid`) ) CHARACTER SET utf8 COLLATE utf8_unicode_ci',","        function(err) {","          if (err) done(err);","          else if (cleanup) {","            connection.query('SET GLOBAL event_scheduler = 1', function(","              err) {","              if (err) {","                if (err.code !== 'ER_SPECIFIC_ACCESS_DENIED_ERROR')","                  done(err);","                else {","                  setInterval(nodeCleanup, 900000);","                  done();","                }","              } else {","                connection.query(","                  'CREATE EVENT IF NOT EXISTS `sess_cleanup` ON SCHEDULE EVERY 15 MINUTE DO ' +","                  cleanupQuery,","                  function(err) {","                    done(err);","                  });","              }","            });","          } else done();","        });","    }, function(err) {","      if (err) throw err;","    });","  }","","  util.inherits(MySQLStore, Store);","","  Object.defineProperty(MySQLStore.prototype, 'mysql', {","    get: function() {","      if (this.__mysql) return this.__mysql;","      else {","        var mysql = null;","        try {","          mysql = require('mysql');","          this.__mysql = mysql;","        } catch (err) {","          throw new Error('mysql module is not installed!');","        }","","        return mysql;","      }","    }","  });","","  Object.defineProperty(MySQLStore.prototype, 'pool', {","    get: function() {","      if (this.__pool) return this.__pool;","      else {","        var pool = this.mysql.createPool(this.config);","        this.__pool = pool;","","        return pool;","      }","    },","    set: function(val) {","      this.__pool = val;","    }","  });","","  MySQLStore.prototype.query = function(query, callback) {","    var usePool = this.usePool,","      pool = this.pool,","      config = this.config,","      mysql = this.mysql,","      tries = 0,","      maxTries = (this.numRetries || 3) + 1,","      error = function(err) {","        if (err.code === 'PROTOCOL_CONNECTION_LOST') {","          retry();","        } else callback(err);","      },","      release = function(connection) {","        return function(err, value) {","          connection.removeListener('error', error);","          if (err) callback(err);","          else {","            if (usePool) connection.release();","            else connection.end();","            if (typeof callback === 'function') callback(null, value);","          }","        };","      },","      execute = function(connection) {","        connection.on('error', error);","        try {","          query(connection, release(connection));","        } catch (err) {","          retry();","        }","      },","      retry = function(prevErr) {","        if (tries < maxTries) {","          tries++;","          try {","            if (usePool) {","              pool.getConnection(function(err, connection) {","                if (err) callback(err);","                else execute(connection);","              });","            } else {","              var connection = mysql.createConnection(config);","              connection.connect(function(err) {","                if (err) callback(err);","                else execute(connection);","              });","            }","          } catch (err) {","            retry(err);","          }","        }","        //TODO: Use \"prevError\" to report an inner error (will require error lib?)","        else callback(new Error(\"Connection failed too many times in a row\"));","      };","","    retry();","  };","","  MySQLStore.prototype.get = function(sid, callback) {","    var secret = this.secret;","    self = this;","","    this.query(function(connection, done) {","      connection.query('SELECT `session` FROM `' + TableName +","        '` WHERE `sid` = ?', [sid],","        function(err, result) {","          if (result && result[0] && result[0].session) {","            try {","              var session = JSON.parse(result[0].session);","              ","              if (secret) {","                session = JSON.parse(session, secret, this.algo);","              }","              ","              done(null, session);","            } catch (cryptoErr) {","              done(cryptoErr);","            }","          } else {","            done(err);","          }","        });","    }, callback);","  };","","  MySQLStore.prototype.set = function(sid, session, callback) {","    var expires = new Date(session.cookie.expires).getTime() / 1000;","","    session = JSON.stringify(session);","","    if (this.secret) {","      session = encryptData(session, this.secret, this.algorithm);","    }","","    this.query(function(connection, done) {","      connection.query('INSERT INTO `' + TableName +","        '` (`sid`, `session`, `expires`) VALUES(?, ?, ?) ON DUPLICATE KEY UPDATE `session` = ?, `expires` = ?', [","          sid, session, expires, session, expires","        ],","        function(err) {","          done(err);","        });","    }, callback);","  };","","  MySQLStore.prototype.destroy = function(sid, callback) {","    this.query(function(connection, done) {","      connection.query('DELETE FROM `' + TableName +","        '` WHERE `sid` = ?', [sid],","        function(err) {","          done(err);","        });","    }, callback);","  };","","","  return MySQLStore;","};"]}],[{"start":{"row":269,"column":2},"end":{"row":294,"column":4},"action":"remove","lines":["MySQLStore.prototype.get = function(sid, callback) {","    var secret = this.secret;","    self = this;","","    this.query(function(connection, done) {","      connection.query('SELECT `session` FROM `' + TableName +","        '` WHERE `sid` = ?', [sid],","        function(err, result) {","          if (result && result[0] && result[0].session) {","            try {","              var session = JSON.parse(result[0].session);","              ","              if (secret) {","                session = JSON.parse(session, secret, this.algo);","              }","              ","              done(null, session);","            } catch (cryptoErr) {","              done(cryptoErr);","            }","          } else {","            done(err);","          }","        });","    }, callback);","  };"],"id":112},{"start":{"row":269,"column":2},"end":{"row":294,"column":4},"action":"insert","lines":["MySQLStore.prototype.get = function(sid, callback) {","    var self = this;","    var secret = self.secret;","","    this.query(function(connection, done) {","      connection.query('SELECT `session` FROM `' + TableName +","        '` WHERE `sid` = ?', [sid],","        function(err, result) {","          if (result && result[0] && result[0].session) {","            try {","              var session = JSON.parse(result[0].session);","              ","              if (secret) {","                session = JSON.parse(decryptData(session, secret, this.algo));","              }","              ","              done(null, session);","            } catch (cryptoErr) {","              done(cryptoErr);","            }","          } else {","            done(err);","          }","        });","    }, callback);","  };"]}]]},"ace":{"folds":[],"scrolltop":3092,"scrollleft":0,"selection":{"start":{"row":294,"column":4},"end":{"row":294,"column":4},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":256,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1505818290663,"hash":"29d7109de162f66f3551176eeba16d9f6fd25134"}